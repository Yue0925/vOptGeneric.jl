./MOBKP/set3/W7BI-rnd1-1800.DAT

Project MOMH 2021" --------------------------------

method : bc_rootRelax
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         23.4s /   6.1%           2.26GiB /   2.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              1    1.44s  100.0%   1.44s   52.8MiB  100.0%  52.8MiB
   iteration         79    1.40s   97.1%  17.7ms   48.3MiB   91.5%   627KiB
     relax          102    1.04s   72.1%  10.2ms   37.3MiB   70.5%   374KiB
     dominance       79    315μs    0.0%  3.99μs    184KiB    0.3%  2.33KiB
     incumbent       78    192μs    0.0%  2.46μs   40.0KiB    0.1%     525B
   next node         79   27.7ms    1.9%   351μs   4.28MiB    8.1%  55.5KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 5.01 
total_nodes = 103 
pruned_nodes = 43 
GAP = 0.0 
relaxation_time = 4.45 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.155 
nb_nodes_EPB = 0 
nb_nodes_VB = 102 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         25.1s /   6.2%           2.37GiB /   2.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              2    1.55s  100.0%   775ms   59.5MiB  100.0%  29.8MiB
   iteration        158    1.51s   97.3%  9.54ms   55.0MiB   92.4%   357KiB
     relax          204    1.15s   74.0%  5.62ms   43.5MiB   73.0%   218KiB
     dominance      158    676μs    0.0%  4.28μs    368KiB    0.6%  2.33KiB
     incumbent      156    376μs    0.0%  2.41μs   80.0KiB    0.1%     525B
   next node        158   27.8ms    1.8%   176μs   4.28MiB    7.2%  27.8KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.11 
total_nodes = 103 
pruned_nodes = 43 
GAP = 0.0 
relaxation_time = 0.11 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.155 
nb_nodes_EPB = 0 
nb_nodes_VB = 102 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         26.6s /  11.1%           2.49GiB /   7.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              3    2.96s  100.0%   985ms    180MiB  100.0%  59.9MiB
   iteration      1.28k    2.91s   98.5%  2.27ms    175MiB   97.5%   140KiB
     relax        1.38k    2.53s   85.4%  1.83ms    157MiB   87.2%   116KiB
     dominance    1.28k   5.96ms    0.2%  4.66μs   2.61MiB    1.5%  2.09KiB
     incumbent    1.28k   5.18ms    0.2%  4.06μs    806KiB    0.4%     647B
   next node      1.28k   28.8ms    1.0%  22.5μs   4.32MiB    2.4%  3.46KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.41 
total_nodes = 1177 
pruned_nodes = 483 
GAP = 0.0 
relaxation_time = 1.3 
test_dominance_time = 0.0 
update_incumbent_time = 0.02 
tree_size = 2.693 
nb_nodes_EPB = 0 
nb_nodes_VB = 1176 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         28.6s /  16.8%           2.62GiB /  11.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              4    4.80s  100.0%   1.20s    304MiB  100.0%  76.0MiB
   iteration      1.96k    4.75s   99.0%  2.43ms    299MiB   98.5%   157KiB
     relax        2.08k    4.35s   90.7%  2.09ms    276MiB   90.9%   136KiB
     dominance    1.96k   9.04ms    0.2%  4.62μs   4.19MiB    1.4%  2.19KiB
     incumbent    1.95k   8.29ms    0.2%  4.24μs   1.36MiB    0.4%     732B
   next node      1.96k   29.3ms    0.6%  15.0μs   4.34MiB    1.4%  2.27KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.86 
total_nodes = 701 
pruned_nodes = 315 
GAP = 0.0 
relaxation_time = 1.78 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.756 
nb_nodes_EPB = 0 
nb_nodes_VB = 700 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         34.2s /  29.7%           2.94GiB /  21.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              5    10.2s  100.0%   2.03s    632MiB  100.0%   126MiB
   iteration      3.18k    10.1s   99.5%  3.18ms    627MiB   99.3%   202KiB
     relax        3.33k    9.67s   95.2%  2.90ms    595MiB   94.1%   183KiB
     dominance    3.18k   18.4ms    0.2%  5.80μs   8.58MiB    1.4%  2.76KiB
     incumbent    3.17k   15.6ms    0.2%  4.92μs   2.64MiB    0.4%     871B
   next node      3.18k   30.5ms    0.3%  9.61μs   4.37MiB    0.7%  1.41KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 5.36 
total_nodes = 1253 
pruned_nodes = 598 
GAP = 0.0 
relaxation_time = 5.18 
test_dominance_time = 0.01 
update_incumbent_time = 0.04 
tree_size = 3.634 
nb_nodes_EPB = 0 
nb_nodes_VB = 1252 
root_relax = true 
TO = false 

Querying...
length Y_N = 11
length X_E = 11
displayGraphics
method : bc_rootRelaxEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         35.0s /  30.4%           2.98GiB /  21.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              6    10.7s  100.0%   1.78s    668MiB  100.0%   111MiB
   iteration      3.25k    10.6s   99.5%  3.26ms    663MiB   99.3%   209KiB
     relax        3.44k    10.2s   95.4%  2.96ms    630MiB   94.3%   188KiB
     dominance    3.25k   19.1ms    0.2%  5.89μs   8.74MiB    1.3%  2.75KiB
     incumbent    3.24k   15.8ms    0.1%  4.88μs   2.66MiB    0.4%     858B
   next node      3.25k   30.7ms    0.3%  9.44μs   4.38MiB    0.7%  1.38KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.51 
total_nodes = 108 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.15 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.157 
nb_nodes_EPB = 5 
nb_nodes_VB = 102 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         35.3s /  30.5%           2.99GiB /  22.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              7    10.8s  100.0%   1.54s    675MiB  100.0%  96.4MiB
   iteration      3.32k    10.7s   99.5%  3.23ms    670MiB   99.3%   207KiB
     relax        3.55k    10.3s   95.5%  2.90ms    636MiB   94.3%   184KiB
     dominance    3.32k   19.5ms    0.2%  5.87μs   8.90MiB    1.3%  2.74KiB
     incumbent    3.31k   16.0ms    0.1%  4.81μs   2.68MiB    0.4%     846B
   next node      3.32k   30.8ms    0.3%  9.26μs   4.38MiB    0.6%  1.35KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.13 
total_nodes = 108 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.12 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.157 
nb_nodes_EPB = 5 
nb_nodes_VB = 102 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         36.0s /  31.3%           3.04GiB /  23.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              8    11.2s  100.0%   1.41s    728MiB  100.0%  91.0MiB
   iteration      3.67k    11.2s   99.5%  3.05ms    723MiB   99.4%   202KiB
     relax        4.04k    10.8s   95.6%  2.66ms    687MiB   94.4%   174KiB
     dominance    3.67k   20.7ms    0.2%  5.64μs   9.60MiB    1.3%  2.68KiB
     incumbent    3.67k   16.4ms    0.1%  4.48μs   2.78MiB    0.4%     794B
   next node      3.67k   30.9ms    0.3%  8.42μs   4.39MiB    0.6%  1.22KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.47 
total_nodes = 495 
pruned_nodes = 222 
GAP = 0.0 
relaxation_time = 0.42 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.959 
nb_nodes_EPB = 14 
nb_nodes_VB = 480 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         36.7s /  32.3%           3.13GiB /  25.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              9    11.9s  100.0%   1.32s    814MiB  100.0%  90.5MiB
   iteration      4.05k    11.8s   99.5%  2.92ms    810MiB   99.4%   205KiB
     relax        4.63k    11.4s   95.8%  2.46ms    771MiB   94.6%   170KiB
     dominance    4.05k   22.4ms    0.2%  5.54μs   10.4MiB    1.3%  2.64KiB
     incumbent    4.04k   17.1ms    0.1%  4.24μs   2.91MiB    0.4%     755B
   next node      4.05k   31.2ms    0.3%  7.71μs   4.40MiB    0.5%  1.11KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.64 
total_nodes = 592 
pruned_nodes = 279 
GAP = 0.0 
relaxation_time = 0.56 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.146 
nb_nodes_EPB = 17 
nb_nodes_VB = 574 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         38.8s /  35.5%           3.40GiB /  31.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             10    13.8s  100.0%   1.38s   1.06GiB  100.0%   109MiB
   iteration      4.88k    13.7s   99.6%  2.81ms   1.06GiB   99.6%   228KiB
     relax        6.11k    13.3s   96.2%  2.17ms   1.01GiB   95.2%   174KiB
     dominance    4.88k   28.2ms    0.2%  5.79μs   13.4MiB    1.2%  2.80KiB
     incumbent    4.87k   18.5ms    0.1%  3.80μs   3.16MiB    0.3%     681B
   next node      4.88k   31.7ms    0.2%  6.49μs   4.43MiB    0.4%     951B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.92 
total_nodes = 1475 
pruned_nodes = 724 
GAP = 0.0 
relaxation_time = 1.63 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 2.765 
nb_nodes_EPB = 56 
nb_nodes_VB = 1418 
root_relax = true 
TO = false 

Querying...
length Y_N = 11
length X_E = 11
displayGraphics
method : bc_rootRelaxCP
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         39.1s /  35.5%           3.41GiB /  31.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             11    13.9s  100.0%   1.26s   1.07GiB  100.0%   100MiB
   iteration      4.96k    13.8s   99.6%  2.79ms   1.07GiB   99.6%   225KiB
     relax        6.21k    13.4s   96.2%  2.15ms   1.02GiB   95.2%   172KiB
     dominance    4.96k   28.5ms    0.2%  5.75μs   13.5MiB    1.2%  2.80KiB
     incumbent    4.95k   18.7ms    0.1%  3.77μs   3.20MiB    0.3%     679B
   next node      4.96k   31.7ms    0.2%  6.40μs   4.43MiB    0.4%     937B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.11 
total_nodes = 103 
pruned_nodes = 43 
GAP = 0.0 
relaxation_time = 0.1 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.155 
nb_nodes_EPB = 0 
nb_nodes_VB = 102 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 79 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.1 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.1 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         39.4s /  35.5%           3.42GiB /  31.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             12    14.0s  100.0%   1.17s   1.08GiB  100.0%  91.9MiB
   iteration      5.04k    13.9s   99.6%  2.77ms   1.07GiB   99.6%   223KiB
     relax        6.31k    13.5s   96.3%  2.13ms   1.03GiB   95.2%   170KiB
     dominance    5.04k   28.8ms    0.2%  5.72μs   13.7MiB    1.2%  2.79KiB
     incumbent    5.02k   18.8ms    0.1%  3.75μs   3.24MiB    0.3%     676B
   next node      5.04k   31.8ms    0.2%  6.31μs   4.43MiB    0.4%     923B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.11 
total_nodes = 103 
pruned_nodes = 43 
GAP = 0.0 
relaxation_time = 0.1 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.155 
nb_nodes_EPB = 0 
nb_nodes_VB = 102 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 79 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.1 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.1 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         41.7s /  36.3%           3.65GiB /  32.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             13    15.1s  100.0%   1.16s   1.19GiB  100.0%  94.0MiB
   iteration      6.16k    15.1s   99.6%  2.45ms   1.19GiB   99.6%   203KiB
     relax        7.48k    14.6s   96.4%  1.95ms   1.13GiB   95.1%   159KiB
     dominance    6.16k   32.7ms    0.2%  5.31μs   16.0MiB    1.3%  2.66KiB
     incumbent    6.14k   21.9ms    0.1%  3.56μs   3.95MiB    0.3%     674B
   next node      6.16k   32.2ms    0.2%  5.24μs   4.46MiB    0.4%     761B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 1.4 
total_nodes = 1175 
pruned_nodes = 482 
GAP = 0.0 
relaxation_time = 1.24 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 2.758 
nb_nodes_EPB = 0 
nb_nodes_VB = 1174 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 1119 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 1.24 
times_calling_separators = 0.0 
times_oper_cutPool = 0.07 
times_total_for_cuts = 1.32 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         43.4s /  38.4%           3.78GiB /  34.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             14    16.7s  100.0%   1.19s   1.32GiB  100.0%  96.2MiB
   iteration      6.83k    16.6s   99.6%  2.43ms   1.31GiB   99.6%   201KiB
     relax        8.18k    16.1s   96.7%  1.97ms   1.25GiB   95.2%   160KiB
     dominance    6.83k   35.4ms    0.2%  5.19μs   17.5MiB    1.3%  2.63KiB
     incumbent    6.82k   24.2ms    0.1%  3.55μs   4.53MiB    0.3%     696B
   next node      6.83k   32.5ms    0.2%  4.76μs   4.49MiB    0.3%     688B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 1.53 
total_nodes = 701 
pruned_nodes = 315 
GAP = 0.0 
relaxation_time = 1.47 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.831 
nb_nodes_EPB = 0 
nb_nodes_VB = 700 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 679 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 1.47 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 1.48 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         47.6s /  43.5%           4.11GiB /  39.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             15    20.7s  100.0%   1.38s   1.64GiB  100.0%   112MiB
   iteration      8.05k    20.7s   99.7%  2.57ms   1.63GiB   99.7%   213KiB
     relax        9.43k    20.1s   97.2%  2.14ms   1.57GiB   95.5%   174KiB
     dominance    8.05k   43.4ms    0.2%  5.39μs   21.9MiB    1.3%  2.79KiB
     incumbent    8.04k   29.4ms    0.1%  3.66μs   5.80MiB    0.3%     757B
   next node      8.05k   33.0ms    0.2%  4.10μs   4.52MiB    0.3%     589B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 20
 # informations of B&B algorithm : 
total_times_used = 4.07 
total_nodes = 1251 
pruned_nodes = 597 
GAP = 0.0 
relaxation_time = 3.92 
test_dominance_time = 0.0 
update_incumbent_time = 0.02 
tree_size = 3.721 
nb_nodes_EPB = 0 
nb_nodes_VB = 1250 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 1218 
cuts_applied = 20 
sp_cuts = 20 
mp_cuts = 0 
cuts_total = 20 
times_calling_dicho = 3.92 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 3.94 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 11
length X_E = 11
displayGraphics
method : bc_rootRelaxCPEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         47.8s /  43.5%           4.11GiB /  40.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             16    20.8s  100.0%   1.30s   1.65GiB  100.0%   105MiB
   iteration      8.12k    20.8s   99.7%  2.55ms   1.64GiB   99.7%   212KiB
     relax        9.54k    20.2s   97.2%  2.12ms   1.57GiB   95.5%   173KiB
     dominance    8.12k   43.7ms    0.2%  5.38μs   22.1MiB    1.3%  2.78KiB
     incumbent    8.11k   29.5ms    0.1%  3.64μs   5.82MiB    0.3%     753B
   next node      8.12k   33.0ms    0.2%  4.07μs   4.53MiB    0.3%     584B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 108 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.157 
nb_nodes_EPB = 5 
nb_nodes_VB = 102 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 72 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.08 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
────────────────────────
    Tot / % measured:         48.1s /  43.5%           4.12GiB /  40.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             17    20.9s  100.0%   1.23s   1.65GiB  100.0%   100MiB
   iteration      8.20k    20.8s   99.7%  2.54ms   1.65GiB   99.7%   211KiB
     relax        9.65k    20.3s   97.2%  2.11ms   1.58GiB   95.5%   172KiB
     dominance    8.20k   44.0ms    0.2%  5.36μs   22.2MiB    1.3%  2.78KiB
     incumbent    8.18k   29.6ms    0.1%  3.62μs   5.84MiB    0.3%     749B
   next node      8.20k   33.1ms    0.2%  4.03μs   4.53MiB    0.3%     579B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 108 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.157 
nb_nodes_EPB = 5 
nb_nodes_VB = 102 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 72 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.09 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         48.6s /  43.9%           4.18GiB /  40.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             18    21.3s  100.0%   1.19s   1.71GiB  100.0%  97.0MiB
   iteration      8.55k    21.3s   99.7%  2.49ms   1.70GiB   99.7%   209KiB
     relax        10.1k    20.8s   97.3%  2.05ms   1.63GiB   95.5%   168KiB
     dominance    8.55k   45.2ms    0.2%  5.29μs   23.0MiB    1.3%  2.75KiB
     incumbent    8.53k   30.1ms    0.1%  3.53μs   5.94MiB    0.3%     730B
   next node      8.55k   33.2ms    0.2%  3.88μs   4.54MiB    0.3%     557B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 0.44 
total_nodes = 495 
pruned_nodes = 222 
GAP = 0.0 
relaxation_time = 0.4 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.029 
nb_nodes_EPB = 14 
nb_nodes_VB = 480 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 353 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 0.4 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.37 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         49.4s /  44.4%           4.27GiB /  42.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             19    21.9s  100.0%   1.15s   1.79GiB  100.0%  96.5MiB
   iteration      8.92k    21.9s   99.7%  2.45ms   1.79GiB   99.7%   210KiB
     relax        10.7k    21.3s   97.3%  1.99ms   1.71GiB   95.6%   167KiB
     dominance    8.92k   46.9ms    0.2%  5.25μs   23.8MiB    1.3%  2.73KiB
     incumbent    8.90k   30.7ms    0.1%  3.45μs   6.07MiB    0.3%     716B
   next node      8.92k   33.4ms    0.2%  3.74μs   4.55MiB    0.2%     535B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.61 
total_nodes = 592 
pruned_nodes = 279 
GAP = 0.0 
relaxation_time = 0.53 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.146 
nb_nodes_EPB = 17 
nb_nodes_VB = 574 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 371 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.53 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.49 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         51.4s /  46.3%           4.54GiB /  45.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             20    23.8s  100.0%   1.19s   2.06GiB  100.0%   105MiB
   iteration      9.75k    23.7s   99.7%  2.44ms   2.05GiB   99.8%   221KiB
     relax        12.2k    23.2s   97.4%  1.90ms   1.97GiB   95.7%   169KiB
     dominance    9.75k   52.9ms    0.2%  5.42μs   26.7MiB    1.3%  2.80KiB
     incumbent    9.73k   32.1ms    0.1%  3.30μs   6.33MiB    0.3%     682B
   next node      9.75k   33.8ms    0.1%  3.47μs   4.57MiB    0.2%     492B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 5
 # informations of B&B algorithm : 
total_times_used = 1.88 
total_nodes = 1473 
pruned_nodes = 723 
GAP = 0.0 
relaxation_time = 1.61 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 2.847 
nb_nodes_EPB = 56 
nb_nodes_VB = 1416 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 832 
cuts_applied = 5 
sp_cuts = 5 
mp_cuts = 0 
cuts_total = 5 
times_calling_dicho = 1.61 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 1.38 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 11
length X_E = 11
displayGraphics
./MOBKP/set3/W7BI-rnd1-3000.DAT

Project MOMH 2021" --------------------------------

method : bc_rootRelax
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         20.7s /   5.7%           2.26GiB /   2.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              1    1.18s  100.0%   1.18s   53.2MiB  100.0%  53.2MiB
   iteration        112    1.12s   94.7%  10.0ms   48.7MiB   91.5%   445KiB
     relax          120    857ms   72.6%  7.14ms   37.5MiB   70.5%   320KiB
     dominance      112    333μs    0.0%  2.97μs    221KiB    0.4%  1.98KiB
     incumbent      111    289μs    0.0%  2.60μs   60.5KiB    0.1%     558B
   next node        112   50.7ms    4.3%   453μs   4.28MiB    8.1%  39.1KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 4.43 
total_nodes = 121 
pruned_nodes = 43 
GAP = 0.0 
relaxation_time = 3.99 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.194 
nb_nodes_EPB = 0 
nb_nodes_VB = 120 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         22.3s /   5.8%           2.37GiB /   2.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              2    1.29s  100.0%   647ms   60.9MiB  100.0%  30.4MiB
   iteration        224    1.23s   95.2%  5.50ms   56.3MiB   92.6%   258KiB
     relax          240    968ms   74.8%  4.03ms   44.6MiB   73.3%   190KiB
     dominance      224    637μs    0.0%  2.84μs    443KiB    0.7%  1.98KiB
     incumbent      222    552μs    0.0%  2.49μs    121KiB    0.2%     558B
   next node        224   50.8ms    3.9%   227μs   4.28MiB    7.0%  19.6KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.12 
total_nodes = 121 
pruned_nodes = 43 
GAP = 0.0 
relaxation_time = 0.11 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.194 
nb_nodes_EPB = 0 
nb_nodes_VB = 120 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         22.7s /   7.0%           2.40GiB /   3.6%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              3    1.59s  100.0%   529ms   89.2MiB  100.0%  29.7MiB
   iteration        492    1.53s   96.1%  3.10ms   84.7MiB   94.9%   176KiB
     relax          508    1.26s   79.3%  2.48ms   71.7MiB   80.4%   144KiB
     dominance      492   1.11ms    0.1%  2.25μs    740KiB    0.8%  1.50KiB
     incumbent      489   1.03ms    0.1%  2.11μs    230KiB    0.3%     482B
   next node        492   50.9ms    3.2%   103μs   4.29MiB    4.8%  8.93KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.3 
total_nodes = 269 
pruned_nodes = 122 
GAP = 0.0 
relaxation_time = 0.28 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.637 
nb_nodes_EPB = 0 
nb_nodes_VB = 268 
root_relax = true 
TO = false 

Querying...
length Y_N = 4
length X_E = 4
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         23.3s /   8.8%           2.47GiB /   6.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              4    2.06s  100.0%   515ms    154MiB  100.0%  38.5MiB
   iteration        985    2.00s   96.9%  2.03ms    149MiB   97.0%   155KiB
     relax        1.00k    1.73s   83.8%  1.72ms    134MiB   87.2%   137KiB
     dominance      985   1.63ms    0.1%  1.65μs   0.96MiB    0.6%  1.00KiB
     incumbent      981   1.54ms    0.1%  1.57μs    360KiB    0.2%     376B
   next node        985   51.0ms    2.5%  51.8μs   4.31MiB    2.8%  4.48KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.47 
total_nodes = 497 
pruned_nodes = 181 
GAP = 0.0 
relaxation_time = 0.45 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.192 
nb_nodes_EPB = 0 
nb_nodes_VB = 496 
root_relax = true 
TO = false 

Querying...
length Y_N = 2
length X_E = 2
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         25.4s /  15.4%           2.70GiB /  14.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              5    3.90s  100.0%   779ms    390MiB  100.0%  78.1MiB
   iteration      2.17k    3.83s   98.3%  1.76ms    386MiB   98.8%   182KiB
     relax        2.20k    3.54s   91.0%  1.61ms    364MiB   93.1%   169KiB
     dominance    2.17k   5.57ms    0.1%  2.57μs   3.33MiB    0.9%  1.57KiB
     incumbent    2.17k   4.40ms    0.1%  2.03μs   0.97MiB    0.2%     471B
   next node      2.17k   51.4ms    1.3%  23.7μs   4.34MiB    1.1%  2.05KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.85 
total_nodes = 1201 
pruned_nodes = 558 
GAP = 0.0 
relaxation_time = 1.73 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 3.237 
nb_nodes_EPB = 0 
nb_nodes_VB = 1200 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
method : bc_rootRelaxEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         25.9s /  16.5%           2.74GiB /  15.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              6    4.26s  100.0%   710ms    428MiB  100.0%  71.4MiB
   iteration      2.29k    4.20s   98.5%  1.83ms    424MiB   98.9%   189KiB
     relax        2.35k    3.91s   91.7%  1.67ms    401MiB   93.6%   175KiB
     dominance    2.29k   5.95ms    0.1%  2.60μs   3.57MiB    0.8%  1.59KiB
     incumbent    2.29k   4.67ms    0.1%  2.04μs   1.03MiB    0.2%     472B
   next node      2.29k   51.4ms    1.2%  22.4μs   4.35MiB    1.0%  1.94KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.37 
total_nodes = 144 
pruned_nodes = 53 
GAP = 0.0 
relaxation_time = 0.12 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.223 
nb_nodes_EPB = 3 
nb_nodes_VB = 140 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         26.2s /  16.7%           2.75GiB /  15.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              7    4.38s  100.0%   626ms    438MiB  100.0%  62.5MiB
   iteration      2.41k    4.31s   98.5%  1.79ms    433MiB   98.9%   184KiB
     relax        2.49k    4.03s   91.9%  1.62ms    410MiB   93.6%   169KiB
     dominance    2.41k   6.32ms    0.1%  2.62μs   3.80MiB    0.9%  1.61KiB
     incumbent    2.41k   4.93ms    0.1%  2.05μs   1.09MiB    0.2%     473B
   next node      2.41k   51.5ms    1.2%  21.3μs   4.35MiB    1.0%  1.85KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.13 
total_nodes = 144 
pruned_nodes = 53 
GAP = 0.0 
relaxation_time = 0.12 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.223 
nb_nodes_EPB = 3 
nb_nodes_VB = 140 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         26.5s /  17.4%           2.78GiB /  16.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              8    4.62s  100.0%   578ms    466MiB  100.0%  58.3MiB
   iteration      2.67k    4.56s   98.6%  1.71ms    462MiB   99.0%   177KiB
     relax        2.77k    4.26s   92.3%  1.54ms    437MiB   93.7%   162KiB
     dominance    2.67k   6.76ms    0.1%  2.54μs   4.07MiB    0.9%  1.57KiB
     incumbent    2.66k   5.33ms    0.1%  2.00μs   1.18MiB    0.3%     465B
   next node      2.67k   51.6ms    1.1%  19.3μs   4.36MiB    0.9%  1.67KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.25 
total_nodes = 279 
pruned_nodes = 127 
GAP = 0.0 
relaxation_time = 0.23 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.621 
nb_nodes_EPB = 2 
nb_nodes_VB = 276 
root_relax = true 
TO = false 

Querying...
length Y_N = 4
length X_E = 4
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         27.2s /  18.7%           2.85GiB /  18.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              9    5.08s  100.0%   565ms    531MiB  100.0%  59.0MiB
   iteration      3.16k    5.02s   98.7%  1.59ms    526MiB   99.1%   171KiB
     relax        3.26k    4.72s   92.9%  1.45ms    499MiB   94.1%   157KiB
     dominance    3.16k   7.30ms    0.1%  2.31μs   4.31MiB    0.8%  1.40KiB
     incumbent    3.15k   5.81ms    0.1%  1.85μs   1.30MiB    0.2%     434B
   next node      3.16k   51.7ms    1.0%  16.4μs   4.37MiB    0.8%  1.42KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.46 
total_nodes = 497 
pruned_nodes = 181 
GAP = 0.0 
relaxation_time = 0.44 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.192 
nb_nodes_EPB = 0 
nb_nodes_VB = 496 
root_relax = true 
TO = false 

Querying...
length Y_N = 2
length X_E = 2
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         28.5s /  21.7%           3.03GiB /  23.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             10    6.19s  100.0%   619ms    715MiB  100.0%  71.5MiB
   iteration      3.85k    6.12s   98.9%  1.59ms    710MiB   99.3%   189KiB
     relax        4.29k    5.82s   94.0%  1.36ms    678MiB   94.9%   162KiB
     dominance    3.85k   9.92ms    0.2%  2.58μs   5.69MiB    0.8%  1.51KiB
     incumbent    3.84k   6.73ms    0.1%  1.75μs   1.48MiB    0.2%     404B
   next node      3.85k   52.0ms    0.8%  13.5μs   4.39MiB    0.6%  1.17KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.12 
total_nodes = 1026 
pruned_nodes = 486 
GAP = 0.0 
relaxation_time = 0.93 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 2.121 
nb_nodes_EPB = 11 
nb_nodes_VB = 1014 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
method : bc_rootRelaxCP
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         28.8s /  21.9%           3.04GiB /  23.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             11    6.30s  100.0%   573ms    723MiB  100.0%  65.7MiB
   iteration      3.96k    6.23s   98.9%  1.57ms    718MiB   99.3%   185KiB
     relax        4.41k    5.93s   94.0%  1.34ms    685MiB   94.9%   159KiB
     dominance    3.96k   10.2ms    0.2%  2.59μs   5.90MiB    0.8%  1.52KiB
     incumbent    3.95k   6.99ms    0.1%  1.77μs   1.54MiB    0.2%     408B
   next node      3.96k   52.0ms    0.8%  13.1μs   4.40MiB    0.6%  1.14KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.12 
total_nodes = 121 
pruned_nodes = 43 
GAP = 0.0 
relaxation_time = 0.11 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.194 
nb_nodes_EPB = 0 
nb_nodes_VB = 120 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 112 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.11 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.11 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         29.1s /  22.1%           3.05GiB /  23.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             12    6.41s  100.0%   535ms    730MiB  100.0%  60.9MiB
   iteration      4.08k    6.35s   98.9%  1.56ms    726MiB   99.4%   182KiB
     relax        4.53k    6.04s   94.1%  1.33ms    693MiB   94.8%   157KiB
     dominance    4.08k   10.6ms    0.2%  2.59μs   6.12MiB    0.8%  1.54KiB
     incumbent    4.06k   7.26ms    0.1%  1.79μs   1.60MiB    0.2%     412B
   next node      4.08k   52.0ms    0.8%  12.8μs   4.40MiB    0.6%  1.11KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.12 
total_nodes = 121 
pruned_nodes = 43 
GAP = 0.0 
relaxation_time = 0.12 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.194 
nb_nodes_EPB = 0 
nb_nodes_VB = 120 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 112 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.12 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.11 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         29.5s /  22.6%           3.08GiB /  24.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             13    6.67s  100.0%   513ms    758MiB  100.0%  58.3MiB
   iteration      4.34k    6.60s   99.0%  1.52ms    753MiB   99.4%   177KiB
     relax        4.80k    6.29s   94.3%  1.31ms    719MiB   94.8%   153KiB
     dominance    4.34k   11.0ms    0.2%  2.54μs   6.41MiB    0.8%  1.51KiB
     incumbent    4.33k   7.72ms    0.1%  1.78μs   1.70MiB    0.2%     413B
   next node      4.34k   52.1ms    0.8%  12.0μs   4.41MiB    0.6%  1.04KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.26 
total_nodes = 269 
pruned_nodes = 122 
GAP = 0.0 
relaxation_time = 0.25 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.637 
nb_nodes_EPB = 0 
nb_nodes_VB = 268 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 268 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.25 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.25 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 4
length X_E = 4
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         30.1s /  23.7%           3.14GiB /  25.6%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             14    7.13s  100.0%   509ms    822MiB  100.0%  58.7MiB
   iteration      4.84k    7.06s   99.0%  1.46ms    818MiB   99.4%   173KiB
     relax        5.29k    6.75s   94.6%  1.27ms    781MiB   95.0%   151KiB
     dominance    4.84k   11.6ms    0.2%  2.39μs   6.65MiB    0.8%  1.41KiB
     incumbent    4.82k   8.21ms    0.1%  1.70μs   1.83MiB    0.2%     398B
   next node      4.84k   52.3ms    0.7%  10.8μs   4.42MiB    0.5%     959B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.47 
total_nodes = 497 
pruned_nodes = 181 
GAP = 0.0 
relaxation_time = 0.44 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.192 
nb_nodes_EPB = 0 
nb_nodes_VB = 496 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 493 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.44 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.44 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 2
length X_E = 2
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         33.0s /  27.8%           3.49GiB /  30.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             15    9.20s  100.0%   613ms   1.06GiB  100.0%  72.1MiB
   iteration      6.03k    9.13s   99.2%  1.51ms   1.05GiB   99.6%   183KiB
     relax        6.49k    8.80s   95.6%  1.35ms   1.01GiB   95.5%   163KiB
     dominance    6.03k   15.7ms    0.2%  2.60μs   9.02MiB    0.8%  1.53KiB
     incumbent    6.01k   11.1ms    0.1%  1.84μs   2.45MiB    0.2%     428B
   next node      6.03k   52.6ms    0.6%  8.73μs   4.46MiB    0.4%     776B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 2
 # informations of B&B algorithm : 
total_times_used = 2.08 
total_nodes = 1201 
pruned_nodes = 558 
GAP = 0.0 
relaxation_time = 1.88 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 3.318 
nb_nodes_EPB = 0 
nb_nodes_VB = 1200 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 1188 
cuts_applied = 2 
sp_cuts = 2 
mp_cuts = 0 
cuts_total = 2 
times_calling_dicho = 1.88 
times_calling_separators = 0.0 
times_oper_cutPool = 0.07 
times_total_for_cuts = 1.97 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
method : bc_rootRelaxCPEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         33.3s /  27.9%           3.50GiB /  30.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             16    9.32s  100.0%   582ms   1.07GiB  100.0%  68.2MiB
   iteration      6.14k    9.24s   99.2%  1.50ms   1.06GiB   99.6%   181KiB
     relax        6.64k    8.91s   95.7%  1.34ms   1.02GiB   95.5%   161KiB
     dominance    6.14k   16.0ms    0.2%  2.61μs   9.25MiB    0.8%  1.54KiB
     incumbent    6.13k   11.3ms    0.1%  1.84μs   2.51MiB    0.2%     429B
   next node      6.14k   52.6ms    0.6%  8.57μs   4.46MiB    0.4%     762B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.13 
total_nodes = 144 
pruned_nodes = 53 
GAP = 0.0 
relaxation_time = 0.12 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.223 
nb_nodes_EPB = 3 
nb_nodes_VB = 140 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 120 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.12 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.11 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
────────────────────────
    Tot / % measured:         33.6s /  28.1%           3.52GiB /  30.6%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             17    9.44s  100.0%   555ms   1.07GiB  100.0%  64.7MiB
   iteration      6.26k    9.36s   99.2%  1.49ms   1.07GiB   99.6%   179KiB
     relax        6.78k    9.03s   95.7%  1.33ms   1.03GiB   95.5%   159KiB
     dominance    6.26k   16.4ms    0.2%  2.62μs   9.49MiB    0.9%  1.55KiB
     incumbent    6.25k   11.6ms    0.1%  1.85μs   2.56MiB    0.2%     430B
   next node      6.26k   52.7ms    0.6%  8.41μs   4.47MiB    0.4%     748B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.13 
total_nodes = 144 
pruned_nodes = 53 
GAP = 0.0 
relaxation_time = 0.12 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.223 
nb_nodes_EPB = 3 
nb_nodes_VB = 140 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 120 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.12 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.11 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         34.0s /  28.5%           3.54GiB /  31.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             18    9.69s  100.0%   539ms   1.10GiB  100.0%  62.7MiB
   iteration      6.52k    9.62s   99.2%  1.48ms   1.10GiB   99.6%   177KiB
     relax        7.06k    9.29s   95.8%  1.32ms   1.05GiB   95.5%   156KiB
     dominance    6.52k   16.9ms    0.2%  2.59μs   9.76MiB    0.9%  1.53KiB
     incumbent    6.50k   12.0ms    0.1%  1.84μs   2.66MiB    0.2%     429B
   next node      6.52k   52.8ms    0.5%  8.10μs   4.48MiB    0.4%     720B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.27 
total_nodes = 279 
pruned_nodes = 127 
GAP = 0.0 
relaxation_time = 0.25 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.621 
nb_nodes_EPB = 2 
nb_nodes_VB = 276 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 252 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.25 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.24 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 4
length X_E = 4
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         34.6s /  29.3%           3.61GiB /  32.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             19    10.1s  100.0%   534ms   1.17GiB  100.0%  62.8MiB
   iteration      7.01k    10.1s   99.3%  1.44ms   1.16GiB   99.6%   174KiB
     relax        7.55k    9.73s   95.9%  1.29ms   1.11GiB   95.5%   155KiB
     dominance    7.01k   17.4ms    0.2%  2.49μs   10.0MiB    0.8%  1.46KiB
     incumbent    6.99k   12.5ms    0.1%  1.78μs   2.78MiB    0.2%     417B
   next node      7.01k   52.9ms    0.5%  7.55μs   4.49MiB    0.4%     672B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.45 
total_nodes = 497 
pruned_nodes = 181 
GAP = 0.0 
relaxation_time = 0.42 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.192 
nb_nodes_EPB = 0 
nb_nodes_VB = 496 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 493 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.42 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.42 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 2
length X_E = 2
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         35.9s /  31.3%           3.80GiB /  35.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             20    11.2s  100.0%   561ms   1.35GiB  100.0%  68.9MiB
   iteration      7.70k    11.2s   99.3%  1.45ms   1.34GiB   99.6%   183KiB
     relax        8.58k    10.8s   96.2%  1.26ms   1.29GiB   95.7%   158KiB
     dominance    7.70k   20.2ms    0.2%  2.62μs   11.4MiB    0.8%  1.51KiB
     incumbent    7.68k   13.4ms    0.1%  1.74μs   2.96MiB    0.2%     404B
   next node      7.70k   53.2ms    0.5%  6.90μs   4.51MiB    0.3%     614B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 2
 # informations of B&B algorithm : 
total_times_used = 1.1 
total_nodes = 1026 
pruned_nodes = 486 
GAP = 0.0 
relaxation_time = 0.95 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 2.203 
nb_nodes_EPB = 11 
nb_nodes_VB = 1014 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 694 
cuts_applied = 2 
sp_cuts = 2 
mp_cuts = 0 
cuts_total = 2 
times_calling_dicho = 0.95 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.88 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
./MOBKP/set3/W7BI-tube1-1800.DAT

Project MOMH 2021" --------------------------------

method : bc_rootRelax
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         20.3s /   5.5%           2.25GiB /   2.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              1    1.11s  100.0%   1.11s   45.0MiB  100.0%  45.0MiB
   iteration         83    1.08s   96.7%  13.0ms   40.5MiB   90.0%   499KiB
     relax          106    823ms   73.9%  7.77ms   29.4MiB   65.3%   284KiB
     dominance       83    323μs    0.0%  3.89μs    189KiB    0.4%  2.27KiB
     incumbent       82    195μs    0.0%  2.38μs   33.8KiB    0.1%     422B
   next node         83   25.4ms    2.3%   306μs   4.28MiB    9.5%  52.8KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 4.48 
total_nodes = 107 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 4.07 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.159 
nb_nodes_EPB = 0 
nb_nodes_VB = 106 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         21.9s /   5.6%           2.36GiB /   2.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              2    1.23s  100.0%   615ms   51.4MiB  100.0%  25.7MiB
   iteration        166    1.19s   97.0%  7.19ms   46.9MiB   91.2%   289KiB
     relax          212    938ms   76.2%  4.43ms   35.4MiB   68.8%   171KiB
     dominance      166    620μs    0.1%  3.73μs    377KiB    0.7%  2.27KiB
     incumbent      164    372μs    0.0%  2.27μs   67.5KiB    0.1%     422B
   next node        166   25.4ms    2.1%   153μs   4.28MiB    8.3%  26.4KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.12 
total_nodes = 107 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.12 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.159 
nb_nodes_EPB = 0 
nb_nodes_VB = 106 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         22.5s /   7.5%           2.41GiB /   3.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              3    1.69s  100.0%   564ms   93.6MiB  100.0%  31.2MiB
   iteration        455    1.66s   97.8%  3.64ms   89.1MiB   95.2%   200KiB
     relax          518    1.40s   82.5%  2.70ms   76.0MiB   81.2%   150KiB
     incumbent      452   1.35ms    0.1%  2.98μs    252KiB    0.3%     571B
     dominance      455   1.26ms    0.1%  2.78μs    788KiB    0.8%  1.73KiB
   next node        455   25.5ms    1.5%  56.2μs   4.29MiB    4.6%  9.66KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.47 
total_nodes = 307 
pruned_nodes = 135 
GAP = 0.0 
relaxation_time = 0.45 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.711 
nb_nodes_EPB = 0 
nb_nodes_VB = 306 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         27.0s /  22.2%           2.77GiB /  16.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              4    6.00s  100.0%   1.50s    453MiB  100.0%   113MiB
   iteration      2.11k    5.96s   99.3%  2.83ms    449MiB   99.0%   218KiB
     relax        2.20k    5.59s   93.3%  2.54ms    412MiB   90.9%   191KiB
     dominance    2.11k   75.3ms    1.3%  35.7μs   16.4MiB    3.6%  7.99KiB
     incumbent    2.10k   16.5ms    0.3%  7.87μs   2.63MiB    0.6%  1.28KiB
   next node      2.11k   26.1ms    0.4%  12.4μs   4.34MiB    1.0%  2.11KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 4.32 
total_nodes = 1687 
pruned_nodes = 800 
GAP = 0.0 
relaxation_time = 4.08 
test_dominance_time = 0.04 
update_incumbent_time = 0.05 
tree_size = 4.683 
nb_nodes_EPB = 0 
nb_nodes_VB = 1686 
root_relax = true 
TO = false 

Querying...
length Y_N = 31
length X_E = 31
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         43.2s /  50.8%           3.97GiB /  41.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              5    21.9s  100.0%   4.39s   1.63GiB  100.0%   333MiB
   iteration      5.52k    21.9s   99.8%  3.97ms   1.62GiB   99.7%   308KiB
     relax        5.75k    20.9s   95.3%  3.64ms   1.52GiB   93.2%   276KiB
     dominance    5.52k    580ms    2.6%   105μs   68.8MiB    4.1%  12.8KiB
     incumbent    5.52k   97.5ms    0.4%  17.7μs   10.5MiB    0.6%  1.96KiB
   next node      5.52k   27.4ms    0.1%  4.96μs   4.45MiB    0.3%     844B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 15.97 
total_nodes = 3549 
pruned_nodes = 1702 
GAP = 0.0 
relaxation_time = 14.91 
test_dominance_time = 0.24 
update_incumbent_time = 0.25 
tree_size = 11.434 
nb_nodes_EPB = 0 
nb_nodes_VB = 3548 
root_relax = true 
TO = false 

Querying...
length Y_N = 51
length X_E = 51
displayGraphics
method : bc_rootRelaxEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         43.6s /  51.0%           4.00GiB /  41.6%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              6    22.3s  100.0%   3.71s   1.66GiB  100.0%   284MiB
   iteration      5.61k    22.2s   99.8%  3.96ms   1.66GiB   99.7%   310KiB
     relax        5.88k    21.2s   95.4%  3.61ms   1.55GiB   93.3%   277KiB
     dominance    5.61k    580ms    2.6%   103μs   69.0MiB    4.1%  12.6KiB
     incumbent    5.61k   97.7ms    0.4%  17.4μs   10.6MiB    0.6%  1.93KiB
   next node      5.61k   27.4ms    0.1%  4.89μs   4.45MiB    0.3%     831B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.32 
total_nodes = 129 
pruned_nodes = 55 
GAP = 0.0 
relaxation_time = 0.1 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.186 
nb_nodes_EPB = 4 
nb_nodes_VB = 124 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         43.9s /  51.0%           4.01GiB /  41.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              7    22.4s  100.0%   3.19s   1.67GiB  100.0%   245MiB
   iteration      5.70k    22.3s   99.8%  3.91ms   1.67GiB   99.7%   307KiB
     relax        6.01k    21.3s   95.4%  3.55ms   1.56GiB   93.3%   272KiB
     dominance    5.70k    581ms    2.6%   102μs   69.2MiB    4.0%  12.4KiB
     incumbent    5.69k   97.8ms    0.4%  17.2μs   10.6MiB    0.6%  1.91KiB
   next node      5.70k   27.5ms    0.1%  4.82μs   4.45MiB    0.3%     819B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 129 
pruned_nodes = 55 
GAP = 0.0 
relaxation_time = 0.1 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.186 
nb_nodes_EPB = 4 
nb_nodes_VB = 124 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         44.5s /  51.2%           4.05GiB /  42.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              8    22.8s  100.0%   2.85s   1.71GiB  100.0%   219MiB
   iteration      5.98k    22.7s   99.8%  3.80ms   1.71GiB   99.7%   299KiB
     relax        6.35k    21.7s   95.5%  3.42ms   1.60GiB   93.3%   264KiB
     dominance    5.98k    581ms    2.6%  97.2μs   69.6MiB    4.0%  11.9KiB
     incumbent    5.97k   98.6ms    0.4%  16.5μs   10.7MiB    0.6%  1.84KiB
   next node      5.98k   27.6ms    0.1%  4.61μs   4.46MiB    0.3%     782B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.41 
total_nodes = 344 
pruned_nodes = 155 
GAP = 0.0 
relaxation_time = 0.36 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.726 
nb_nodes_EPB = 5 
nb_nodes_VB = 338 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         47.6s /  53.9%           4.59GiB /  48.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              9    25.7s  100.0%   2.85s   2.24GiB  100.0%   255MiB
   iteration      7.62k    25.6s   99.8%  3.36ms   2.23GiB   99.8%   307KiB
     relax        9.42k    24.5s   95.6%  2.60ms   2.10GiB   93.7%   233KiB
     dominance    7.62k    662ms    2.6%  86.9μs   85.0MiB    3.7%  11.4KiB
     incumbent    7.61k    102ms    0.4%  13.4μs   11.2MiB    0.5%  1.51KiB
   next node      7.62k   28.3ms    0.1%  3.71μs   4.51MiB    0.2%     621B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 2.92 
total_nodes = 3070 
pruned_nodes = 1491 
GAP = 0.0 
relaxation_time = 2.18 
test_dominance_time = 0.0 
update_incumbent_time = 0.03 
tree_size = 5.356 
nb_nodes_EPB = 77 
nb_nodes_VB = 2992 
root_relax = true 
TO = false 

Querying...
length Y_N = 31
length X_E = 31
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         59.9s /  62.9%           6.21GiB /  61.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             10    37.7s  100.0%   3.77s   3.84GiB  100.0%   393MiB
   iteration      11.3k    37.6s   99.8%  3.33ms   3.83GiB   99.9%   355KiB
     relax        16.6k    35.8s   94.9%  2.16ms   3.61GiB   94.1%   228KiB
     dominance    11.3k    1.38s    3.7%   122μs    147MiB    3.7%  13.3KiB
     incumbent    11.3k    114ms    0.3%  10.1μs   12.4MiB    0.3%  1.13KiB
   next node      11.3k   30.2ms    0.1%  2.67μs   4.62MiB    0.1%     429B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 12.05 
total_nodes = 7147 
pruned_nodes = 3536 
GAP = 0.0 
relaxation_time = 9.41 
test_dominance_time = 0.01 
update_incumbent_time = 0.05 
tree_size = 12.655 
nb_nodes_EPB = 226 
nb_nodes_VB = 6920 
root_relax = true 
TO = false 

Querying...
length Y_N = 51
length X_E = 51
displayGraphics
method : bc_rootRelaxCP
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         60.2s /  62.8%           6.22GiB /  61.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             11    37.8s  100.0%   3.43s   3.84GiB  100.0%   358MiB
   iteration      11.4k    37.7s   99.8%  3.31ms   3.84GiB   99.9%   353KiB
     relax        16.7k    35.8s   94.9%  2.15ms   3.62GiB   94.1%   227KiB
     dominance    11.4k    1.38s    3.7%   121μs    147MiB    3.7%  13.2KiB
     incumbent    11.4k    114ms    0.3%  10.0μs   12.5MiB    0.3%  1.12KiB
   next node      11.4k   30.2ms    0.1%  2.65μs   4.62MiB    0.1%     426B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 107 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.159 
nb_nodes_EPB = 0 
nb_nodes_VB = 106 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 83 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.09 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         60.4s /  62.7%           6.22GiB /  61.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             12    37.9s  100.0%   3.16s   3.85GiB  100.0%   328MiB
   iteration      11.5k    37.8s   99.8%  3.30ms   3.84GiB   99.9%   351KiB
     relax        16.8k    35.9s   94.9%  2.14ms   3.62GiB   94.1%   226KiB
     dominance    11.5k    1.38s    3.6%   120μs    147MiB    3.7%  13.2KiB
     incumbent    11.5k    114ms    0.3%  10.0μs   12.5MiB    0.3%  1.12KiB
   next node      11.5k   30.2ms    0.1%  2.63μs   4.63MiB    0.1%     423B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 107 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.159 
nb_nodes_EPB = 0 
nb_nodes_VB = 106 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 83 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.09 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         61.8s /  61.9%           6.36GiB /  61.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             13    38.3s  100.0%   2.95s   3.88GiB  100.0%   306MiB
   iteration      11.8k    38.2s   99.8%  3.25ms   3.88GiB   99.9%   346KiB
     relax        17.1k    36.4s   94.9%  2.13ms   3.65GiB   94.1%   224KiB
     dominance    11.8k    1.38s    3.6%   117μs    148MiB    3.7%  12.9KiB
     incumbent    11.8k    115ms    0.3%  9.82μs   12.7MiB    0.3%  1.11KiB
   next node      11.8k   30.3ms    0.1%  2.58μs   4.64MiB    0.1%     413B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 0.67 
total_nodes = 307 
pruned_nodes = 135 
GAP = 0.0 
relaxation_time = 0.54 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.743 
nb_nodes_EPB = 0 
nb_nodes_VB = 306 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 289 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 0.54 
times_calling_separators = 0.0 
times_oper_cutPool = 0.07 
times_total_for_cuts = 0.62 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         66.3s /  64.2%           6.72GiB /  63.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             14    42.6s  100.0%   3.04s   4.23GiB  100.0%   310MiB
   iteration      13.4k    42.5s   99.8%  3.17ms   4.23GiB   99.9%   330KiB
     relax        18.8k    40.5s   95.1%  2.16ms   3.98GiB   94.0%   222KiB
     dominance    13.4k    1.48s    3.5%   110μs    164MiB    3.8%  12.5KiB
     incumbent    13.4k    131ms    0.3%  9.76μs   15.1MiB    0.3%  1.15KiB
   next node      13.4k   30.9ms    0.1%  2.30μs   4.69MiB    0.1%     366B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 4.3 
total_nodes = 1687 
pruned_nodes = 800 
GAP = 0.0 
relaxation_time = 4.02 
test_dominance_time = 0.04 
update_incumbent_time = 0.05 
tree_size = 4.718 
nb_nodes_EPB = 0 
nb_nodes_VB = 1686 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 1651 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 4.02 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 4.07 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 31
length X_E = 31
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         82.9s /  70.9%           7.95GiB /  68.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             15    58.7s  100.0%   3.92s   5.44GiB  100.0%   371MiB
   iteration      16.8k    58.7s   99.9%  3.48ms   5.43GiB   99.9%   338KiB
     relax        22.3k    56.0s   95.4%  2.51ms   5.11GiB   94.0%   240KiB
     dominance    16.8k    2.00s    3.4%   119μs    216MiB    3.9%  13.1KiB
     incumbent    16.8k    198ms    0.3%  11.8μs   23.1MiB    0.4%  1.40KiB
   next node      16.8k   32.3ms    0.1%  1.92μs   4.79MiB    0.1%     298B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 75
 # informations of B&B algorithm : 
total_times_used = 16.17 
total_nodes = 3563 
pruned_nodes = 1709 
GAP = 0.0 
relaxation_time = 15.08 
test_dominance_time = 0.25 
update_incumbent_time = 0.24 
tree_size = 11.607 
nb_nodes_EPB = 0 
nb_nodes_VB = 3562 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 3430 
cuts_applied = 75 
sp_cuts = 75 
mp_cuts = 0 
cuts_total = 75 
times_calling_dicho = 15.08 
times_calling_separators = 0.01 
times_oper_cutPool = 0.0 
times_total_for_cuts = 15.25 
times_add_retrieve_cuts = 0.01 



Querying...
length Y_N = 51
length X_E = 51
displayGraphics
method : bc_rootRelaxCPEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         83.1s /  70.8%           7.96GiB /  68.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             16    58.8s  100.0%   3.68s   5.45GiB  100.0%   349MiB
   iteration      16.9k    58.8s   99.9%  3.47ms   5.44GiB   99.9%   337KiB
     relax        22.5k    56.1s   95.4%  2.50ms   5.12GiB   94.0%   239KiB
     dominance    16.9k    2.00s    3.4%   118μs    216MiB    3.9%  13.1KiB
     incumbent    16.9k    198ms    0.3%  11.7μs   23.1MiB    0.4%  1.40KiB
   next node      16.9k   32.3ms    0.1%  1.91μs   4.79MiB    0.1%     297B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 129 
pruned_nodes = 55 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.186 
nb_nodes_EPB = 4 
nb_nodes_VB = 124 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 89 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.09 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
────────────────────────
    Tot / % measured:         83.3s /  70.7%           7.97GiB /  68.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             17    58.9s  100.0%   3.47s   5.45GiB  100.0%   329MiB
   iteration      17.0k    58.9s   99.9%  3.46ms   5.45GiB   99.9%   336KiB
     relax        22.6k    56.2s   95.4%  2.49ms   5.13GiB   94.0%   238KiB
     dominance    17.0k    2.00s    3.4%   117μs    217MiB    3.9%  13.0KiB
     incumbent    17.0k    199ms    0.3%  11.7μs   23.1MiB    0.4%  1.39KiB
   next node      17.0k   32.4ms    0.1%  1.90μs   4.80MiB    0.1%     295B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 129 
pruned_nodes = 55 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.186 
nb_nodes_EPB = 4 
nb_nodes_VB = 124 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 89 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.09 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         83.9s /  70.7%           8.01GiB /  68.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             18    59.3s  100.0%   3.29s   5.49GiB  100.0%   312MiB
   iteration      17.3k    59.2s   99.9%  3.42ms   5.49GiB   99.9%   333KiB
     relax        22.9k    56.6s   95.4%  2.47ms   5.17GiB   94.1%   236KiB
     dominance    17.3k    2.00s    3.4%   116μs    217MiB    3.9%  12.8KiB
     incumbent    17.3k    199ms    0.3%  11.5μs   23.3MiB    0.4%  1.38KiB
   next node      17.3k   32.5ms    0.1%  1.88μs   4.81MiB    0.1%     291B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 0.39 
total_nodes = 344 
pruned_nodes = 155 
GAP = 0.0 
relaxation_time = 0.36 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.759 
nb_nodes_EPB = 5 
nb_nodes_VB = 338 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 278 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 0.36 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.35 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         87.0s /  71.5%           8.55GiB /  70.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             19    62.2s  100.0%   3.27s   6.02GiB  100.0%   324MiB
   iteration      18.9k    62.1s   99.9%  3.28ms   6.01GiB   99.9%   333KiB
     relax        26.0k    59.3s   95.5%  2.28ms   5.67GiB   94.1%   229KiB
     dominance    18.9k    2.08s    3.3%   110μs    232MiB    3.8%  12.6KiB
     incumbent    18.9k    203ms    0.3%  10.7μs   23.7MiB    0.4%  1.28KiB
   next node      18.9k   33.1ms    0.1%  1.75μs   4.86MiB    0.1%     269B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 2
 # informations of B&B algorithm : 
total_times_used = 2.87 
total_nodes = 3068 
pruned_nodes = 1489 
GAP = 0.0 
relaxation_time = 2.2 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 5.437 
nb_nodes_EPB = 75 
nb_nodes_VB = 2992 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 1638 
cuts_applied = 2 
sp_cuts = 2 
mp_cuts = 0 
cuts_total = 2 
times_calling_dicho = 2.2 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 1.82 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 31
length X_E = 31
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         99.1s /  74.7%           10.2GiB /  75.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             20    74.0s  100.0%   3.70s   7.63GiB  100.0%   391MiB
   iteration      22.6k    74.0s   99.9%  3.27ms   7.62GiB   99.9%   353KiB
     relax        33.1k    70.4s   95.1%  2.13ms   7.19GiB   94.2%   227KiB
     dominance    22.6k    2.80s    3.8%   124μs    294MiB    3.8%  13.3KiB
     incumbent    22.6k    215ms    0.3%  9.51μs   25.0MiB    0.3%  1.13KiB
   next node      22.6k   34.8ms    0.0%  1.54μs   4.97MiB    0.1%     230B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 31
 # informations of B&B algorithm : 
total_times_used = 11.91 
total_nodes = 7143 
pruned_nodes = 3534 
GAP = 0.0 
relaxation_time = 9.39 
test_dominance_time = 0.01 
update_incumbent_time = 0.05 
tree_size = 12.76 
nb_nodes_EPB = 224 
nb_nodes_VB = 6918 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 3693 
cuts_applied = 31 
sp_cuts = 31 
mp_cuts = 0 
cuts_total = 31 
times_calling_dicho = 9.39 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 7.6 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 51
length X_E = 51
displayGraphics
./MOBKP/set3/W7BI-tube1-3000.DAT

Project MOMH 2021" --------------------------------

method : bc_rootRelax
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         20.6s /   5.9%           2.26GiB /   2.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              1    1.22s  100.0%   1.22s   51.7MiB  100.0%  51.7MiB
   iteration         87    1.19s   97.0%  13.6ms   47.2MiB   91.3%   556KiB
     relax           96    925ms   75.7%  9.63ms   36.2MiB   70.0%   387KiB
     dominance       87    187μs    0.0%  2.15μs    114KiB    0.2%  1.31KiB
     incumbent       86    103μs    0.0%  1.20μs   23.6KiB    0.0%     281B
   next node         87   25.0ms    2.0%   287μs   4.28MiB    8.3%  50.4KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 4.4 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 3.99 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         22.1s /   5.9%           2.37GiB /   2.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              2    1.30s  100.0%   649ms   57.2MiB  100.0%  28.6MiB
   iteration        174    1.26s   97.2%  7.25ms   52.7MiB   92.1%   310KiB
     relax          192    999ms   77.0%  5.21ms   41.4MiB   72.3%   221KiB
     dominance      174    367μs    0.0%  2.11μs    228KiB    0.4%  1.31KiB
     incumbent      172    200μs    0.0%  1.17μs   47.2KiB    0.1%     281B
   next node        174   25.0ms    1.9%   144μs   4.28MiB    7.5%  25.2KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.08 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.08 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         22.9s /   8.4%           2.43GiB /   4.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              3    1.93s  100.0%   644ms    118MiB  100.0%  39.4MiB
   iteration        665    1.90s   98.1%  2.85ms    114MiB   96.2%   175KiB
     relax          684    1.63s   84.1%  2.38ms   98.2MiB   83.1%   147KiB
     dominance      665   4.20ms    0.2%  6.32μs   2.41MiB    2.0%  3.71KiB
     incumbent      662   1.59ms    0.1%  2.39μs    359KiB    0.3%     555B
   next node        665   25.2ms    1.3%  37.9μs   4.30MiB    3.6%  6.62KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.65 
total_nodes = 493 
pruned_nodes = 226 
GAP = 0.0 
relaxation_time = 0.61 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.194 
nb_nodes_EPB = 0 
nb_nodes_VB = 492 
root_relax = true 
TO = false 

Querying...
length Y_N = 14
length X_E = 14
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         24.3s /  13.1%           2.60GiB /  10.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              4    3.18s  100.0%   795ms    289MiB  100.0%  72.4MiB
   iteration      1.72k    3.14s   98.8%  1.82ms    285MiB   98.4%   169KiB
     relax        1.75k    2.85s   89.8%  1.63ms    261MiB   90.3%   153KiB
     dominance    1.72k   10.8ms    0.3%  6.25μs   6.37MiB    2.2%  3.78KiB
     incumbent    1.72k   4.32ms    0.1%  2.51μs   0.97MiB    0.3%     591B
   next node      1.72k   25.5ms    0.8%  14.8μs   4.33MiB    1.5%  2.57KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.25 
total_nodes = 1071 
pruned_nodes = 493 
GAP = 0.0 
relaxation_time = 1.16 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 2.803 
nb_nodes_EPB = 0 
nb_nodes_VB = 1070 
root_relax = true 
TO = false 

Querying...
length Y_N = 12
length X_E = 12
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         28.6s /  25.2%           3.14GiB /  25.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              5    7.21s  100.0%   1.44s    824MiB  100.0%   165MiB
   iteration      4.28k    7.16s   99.4%  1.67ms    819MiB   99.4%   196KiB
     relax        4.32k    6.84s   94.9%  1.58ms    779MiB   94.5%   184KiB
     dominance    4.28k   21.3ms    0.3%  4.98μs   12.3MiB    1.5%  2.94KiB
     incumbent    4.28k   13.4ms    0.2%  3.12μs   3.04MiB    0.4%     745B
   next node      4.28k   26.3ms    0.4%  6.15μs   4.41MiB    0.5%  1.05KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 4.03 
total_nodes = 2569 
pruned_nodes = 1179 
GAP = 0.0 
relaxation_time = 3.74 
test_dominance_time = 0.01 
update_incumbent_time = 0.04 
tree_size = 7.147 
nb_nodes_EPB = 0 
nb_nodes_VB = 2568 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
method : bc_rootRelaxEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         28.8s /  25.3%           3.14GiB /  25.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              6    7.28s  100.0%   1.21s    829MiB  100.0%   138MiB
   iteration      4.37k    7.24s   99.4%  1.66ms    824MiB   99.4%   193KiB
     relax        4.42k    6.91s   94.9%  1.56ms    784MiB   94.5%   182KiB
     dominance    4.37k   21.5ms    0.3%  4.92μs   12.4MiB    1.5%  2.91KiB
     incumbent    4.36k   13.5ms    0.2%  3.08μs   3.06MiB    0.4%     736B
   next node      4.37k   26.4ms    0.4%  6.03μs   4.41MiB    0.5%  1.03KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.08 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.07 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         29.0s /  25.4%           3.15GiB /  25.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              7    7.36s  100.0%   1.05s    835MiB  100.0%   119MiB
   iteration      4.46k    7.31s   99.4%  1.64ms    830MiB   99.4%   191KiB
     relax        4.51k    6.99s   95.0%  1.55ms    789MiB   94.5%   179KiB
     dominance    4.46k   21.7ms    0.3%  4.87μs   12.5MiB    1.5%  2.88KiB
     incumbent    4.45k   13.5ms    0.2%  3.04μs   3.09MiB    0.4%     727B
   next node      4.46k   26.4ms    0.4%  5.92μs   4.41MiB    0.5%  1.01KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.08 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.08 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         30.0s /  27.4%           3.27GiB /  28.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              8    8.21s  100.0%   1.03s   0.94GiB  100.0%   120MiB
   iteration      4.96k    8.17s   99.5%  1.65ms   0.93GiB   99.5%   197KiB
     relax        5.36k    7.83s   95.3%  1.46ms    910MiB   94.7%   174KiB
     dominance    4.96k   26.5ms    0.3%  5.35μs   14.8MiB    1.5%  3.05KiB
     incumbent    4.95k   14.2ms    0.2%  2.88μs   3.21MiB    0.3%     680B
   next node      4.96k   26.6ms    0.3%  5.36μs   4.43MiB    0.5%     936B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.87 
total_nodes = 848 
pruned_nodes = 399 
GAP = 0.0 
relaxation_time = 0.51 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.491 
nb_nodes_EPB = 19 
nb_nodes_VB = 828 
root_relax = true 
TO = false 

Querying...
length Y_N = 14
length X_E = 14
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         31.0s /  29.1%           3.42GiB /  31.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              9    9.01s  100.0%   1.00s   1.08GiB  100.0%   123MiB
   iteration      5.60k    8.97s   99.5%  1.60ms   1.07GiB   99.6%   201KiB
     relax        6.45k    8.60s   95.4%  1.33ms   1.02GiB   94.8%   166KiB
     dominance    5.60k   31.5ms    0.3%  5.62μs   17.2MiB    1.6%  3.15KiB
     incumbent    5.59k   15.1ms    0.2%  2.71μs   3.38MiB    0.3%     633B
   next node      5.60k   26.8ms    0.3%  4.79μs   4.45MiB    0.4%     833B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.81 
total_nodes = 1092 
pruned_nodes = 528 
GAP = 0.0 
relaxation_time = 0.68 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 2.029 
nb_nodes_EPB = 37 
nb_nodes_VB = 1054 
root_relax = true 
TO = false 

Querying...
length Y_N = 12
length X_E = 12
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         32.8s /  32.2%           3.59GiB /  34.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             10    10.6s  100.0%   1.06s   1.25GiB  100.0%   128MiB
   iteration      6.13k    10.5s   99.5%  1.72ms   1.24GiB   99.6%   213KiB
     relax        7.35k    10.1s   95.9%  1.38ms   1.19GiB   95.2%   169KiB
     dominance    6.13k   35.4ms    0.3%  5.78μs   18.4MiB    1.4%  3.08KiB
     incumbent    6.12k   16.7ms    0.2%  2.73μs   3.54MiB    0.3%     607B
   next node      6.13k   27.3ms    0.3%  4.46μs   4.46MiB    0.3%     764B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.58 
total_nodes = 896 
pruned_nodes = 438 
GAP = 0.0 
relaxation_time = 1.39 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.797 
nb_nodes_EPB = 29 
nb_nodes_VB = 866 
root_relax = true 
TO = false 

Querying...
length Y_N = 8
length X_E = 8
displayGraphics
method : bc_rootRelaxCP
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         33.1s /  32.2%           3.60GiB /  34.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             11    10.7s  100.0%   968ms   1.25GiB  100.0%   117MiB
   iteration      6.21k    10.6s   99.5%  1.71ms   1.25GiB   99.6%   211KiB
     relax        7.44k    10.2s   95.9%  1.37ms   1.19GiB   95.1%   168KiB
     dominance    6.21k   35.6ms    0.3%  5.73μs   18.5MiB    1.4%  3.06KiB
     incumbent    6.20k   16.8ms    0.2%  2.71μs   3.56MiB    0.3%     602B
   next node      6.21k   27.3ms    0.3%  4.40μs   4.47MiB    0.3%     754B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.08 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.07 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 87 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.07 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.07 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         33.3s /  32.2%           3.60GiB /  34.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             12    10.7s  100.0%   894ms   1.26GiB  100.0%   107MiB
   iteration      6.30k    10.7s   99.5%  1.69ms   1.25GiB   99.6%   209KiB
     relax        7.54k    10.3s   96.0%  1.37ms   1.20GiB   95.1%   167KiB
     dominance    6.30k   35.8ms    0.3%  5.68μs   18.6MiB    1.4%  3.03KiB
     incumbent    6.29k   16.9ms    0.2%  2.69μs   3.58MiB    0.3%     598B
   next node      6.30k   27.4ms    0.3%  4.34μs   4.47MiB    0.3%     744B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.08 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.07 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 87 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.07 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.07 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         35.0s /  33.0%           3.78GiB /  35.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             13    11.6s  100.0%   889ms   1.34GiB  100.0%   105MiB
   iteration      6.79k    11.5s   99.6%  1.69ms   1.33GiB   99.6%   206KiB
     relax        8.03k    11.1s   96.2%  1.38ms   1.27GiB   95.1%   166KiB
     dominance    6.79k   39.7ms    0.3%  5.85μs   20.8MiB    1.5%  3.14KiB
     incumbent    6.78k   18.2ms    0.2%  2.68μs   3.89MiB    0.3%     602B
   next node      6.79k   27.5ms    0.2%  4.05μs   4.48MiB    0.3%     692B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 2
 # informations of B&B algorithm : 
total_times_used = 0.85 
total_nodes = 493 
pruned_nodes = 226 
GAP = 0.0 
relaxation_time = 0.73 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.265 
nb_nodes_EPB = 0 
nb_nodes_VB = 492 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 491 
cuts_applied = 2 
sp_cuts = 2 
mp_cuts = 0 
cuts_total = 2 
times_calling_dicho = 0.73 
times_calling_separators = 0.0 
times_oper_cutPool = 0.07 
times_total_for_cuts = 0.82 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 14
length X_E = 14
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         36.4s /  35.1%           3.95GiB /  38.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             14    12.8s  100.0%   912ms   1.51GiB  100.0%   110MiB
   iteration      7.85k    12.7s   99.6%  1.62ms   1.50GiB   99.7%   200KiB
     relax        9.10k    12.3s   96.4%  1.35ms   1.43GiB   95.1%   165KiB
     dominance    7.85k   46.8ms    0.4%  5.96μs   24.8MiB    1.6%  3.23KiB
     incumbent    7.84k   20.9ms    0.2%  2.66μs   4.51MiB    0.3%     603B
   next node      7.85k   27.8ms    0.2%  3.54μs   4.52MiB    0.3%     603B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.22 
total_nodes = 1071 
pruned_nodes = 493 
GAP = 0.0 
relaxation_time = 1.13 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 2.803 
nb_nodes_EPB = 0 
nb_nodes_VB = 1070 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 1059 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 1.13 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 1.12 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 12
length X_E = 12
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         40.5s /  41.2%           4.49GiB /  45.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             15    16.7s  100.0%   1.11s   2.03GiB  100.0%   139MiB
   iteration      10.4k    16.6s   99.7%  1.60ms   2.03GiB   99.8%   204KiB
     relax        11.7k    16.2s   97.0%  1.39ms   1.94GiB   95.6%   174KiB
     dominance    10.4k   58.3ms    0.3%  5.60μs   30.7MiB    1.5%  3.02KiB
     incumbent    10.4k   29.7ms    0.2%  2.86μs   6.59MiB    0.3%     664B
   next node      10.4k   28.6ms    0.2%  2.74μs   4.59MiB    0.2%     463B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 9
 # informations of B&B algorithm : 
total_times_used = 3.94 
total_nodes = 2569 
pruned_nodes = 1179 
GAP = 0.0 
relaxation_time = 3.66 
test_dominance_time = 0.01 
update_incumbent_time = 0.04 
tree_size = 7.233 
nb_nodes_EPB = 0 
nb_nodes_VB = 2568 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 2559 
cuts_applied = 9 
sp_cuts = 9 
mp_cuts = 0 
cuts_total = 9 
times_calling_dicho = 3.66 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 3.7 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
method : bc_rootRelaxCPEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         40.7s /  41.2%           4.50GiB /  45.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             16    16.8s  100.0%   1.05s   2.04GiB  100.0%   130MiB
   iteration      10.5k    16.7s   99.7%  1.59ms   2.03GiB   99.8%   203KiB
     relax        11.8k    16.3s   97.0%  1.38ms   1.95GiB   95.6%   173KiB
     dominance    10.5k   58.5ms    0.3%  5.57μs   30.8MiB    1.5%  3.01KiB
     incumbent    10.5k   29.8ms    0.2%  2.84μs   6.61MiB    0.3%     661B
   next node      10.5k   28.6ms    0.2%  2.72μs   4.60MiB    0.2%     459B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.08 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.07 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 87 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.07 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.07 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
────────────────────────
    Tot / % measured:         40.9s /  41.2%           4.50GiB /  45.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             17    16.8s  100.0%   991ms   2.04GiB  100.0%   123MiB
   iteration      10.6k    16.8s   99.7%  1.59ms   2.04GiB   99.8%   202KiB
     relax        11.9k    16.3s   97.0%  1.38ms   1.95GiB   95.6%   172KiB
     dominance    10.6k   58.6ms    0.3%  5.54μs   31.0MiB    1.5%  3.00KiB
     incumbent    10.6k   29.9ms    0.2%  2.83μs   6.63MiB    0.3%     658B
   next node      10.6k   28.6ms    0.2%  2.70μs   4.60MiB    0.2%     456B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.08 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.07 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 87 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.07 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.07 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         41.7s /  41.9%           4.60GiB /  46.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             18    17.5s  100.0%   969ms   2.14GiB  100.0%   122MiB
   iteration      11.1k    17.4s   99.7%  1.57ms   2.13GiB   99.8%   202KiB
     relax        12.7k    16.9s   97.0%  1.33ms   2.04GiB   95.5%   168KiB
     dominance    11.1k   63.4ms    0.4%  5.72μs   33.2MiB    1.5%  3.07KiB
     incumbent    11.1k   30.6ms    0.2%  2.76μs   6.76MiB    0.3%     640B
   next node      11.1k   28.8ms    0.2%  2.60μs   4.62MiB    0.2%     437B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 0.62 
total_nodes = 848 
pruned_nodes = 399 
GAP = 0.0 
relaxation_time = 0.51 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.562 
nb_nodes_EPB = 19 
nb_nodes_VB = 828 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 503 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 0.51 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.44 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 14
length X_E = 14
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         42.6s /  42.8%           4.74GiB /  48.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             19    18.2s  100.0%   959ms   2.28GiB  100.0%   123MiB
   iteration      11.7k    18.2s   99.7%  1.55ms   2.27GiB   99.8%   203KiB
     relax        13.8k    17.7s   97.1%  1.28ms   2.17GiB   95.5%   165KiB
     dominance    11.7k   68.4ms    0.4%  5.84μs   35.6MiB    1.5%  3.11KiB
     incumbent    11.7k   31.5ms    0.2%  2.69μs   6.92MiB    0.3%     620B
   next node      11.7k   29.1ms    0.2%  2.48μs   4.64MiB    0.2%     414B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.78 
total_nodes = 1092 
pruned_nodes = 528 
GAP = 0.0 
relaxation_time = 0.66 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 2.029 
nb_nodes_EPB = 37 
nb_nodes_VB = 1054 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 641 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.66 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.57 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 12
length X_E = 12
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         43.9s /  44.1%           4.92GiB /  49.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             20    19.4s  100.0%   968ms   2.45GiB  100.0%   125MiB
   iteration      12.3k    19.3s   99.7%  1.58ms   2.44GiB   99.8%   209KiB
     relax        14.7k    18.8s   97.2%  1.28ms   2.34GiB   95.6%   167KiB
     dominance    12.3k   71.1ms    0.4%  5.80μs   36.9MiB    1.5%  3.08KiB
     incumbent    12.2k   32.4ms    0.2%  2.65μs   7.09MiB    0.3%     608B
   next node      12.3k   29.3ms    0.2%  2.39μs   4.65MiB    0.2%     398B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 8
 # informations of B&B algorithm : 
total_times_used = 1.15 
total_nodes = 895 
pruned_nodes = 437 
GAP = 0.0 
relaxation_time = 0.98 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.883 
nb_nodes_EPB = 28 
nb_nodes_VB = 866 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 525 
cuts_applied = 8 
sp_cuts = 8 
mp_cuts = 0 
cuts_total = 8 
times_calling_dicho = 0.98 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.9 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 8
length X_E = 8
displayGraphics
./MOBKP/set3/W7BI-tube1-asyn.DAT

Project MOMH 2021" --------------------------------

method : bc_rootRelax
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         20.5s /   5.9%           2.26GiB /   2.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              1    1.21s  100.0%   1.21s   51.7MiB  100.0%  51.7MiB
   iteration         87    1.17s   97.0%  13.5ms   47.2MiB   91.3%   556KiB
     relax           96    909ms   75.1%  9.47ms   36.2MiB   70.0%   387KiB
     dominance       87    181μs    0.0%  2.08μs    114KiB    0.2%  1.31KiB
     incumbent       86   98.4μs    0.0%  1.14μs   23.6KiB    0.0%     281B
   next node         87   25.1ms    2.1%   288μs   4.28MiB    8.3%  50.4KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 4.54 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 4.13 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         22.0s /   5.8%           2.37GiB /   2.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              2    1.29s  100.0%   643ms   57.2MiB  100.0%  28.6MiB
   iteration        174    1.25s   97.1%  7.18ms   52.7MiB   92.1%   310KiB
     relax          192    985ms   76.5%  5.13ms   41.4MiB   72.3%   221KiB
     dominance      174    348μs    0.0%  2.00μs    228KiB    0.4%  1.31KiB
     incumbent      172    192μs    0.0%  1.12μs   47.2KiB    0.1%     281B
   next node        174   25.1ms    2.0%   144μs   4.28MiB    7.5%  25.2KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.08 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.08 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         22.8s /   8.4%           2.43GiB /   4.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              3    1.92s  100.0%   641ms    118MiB  100.0%  39.2MiB
   iteration        667    1.89s   98.1%  2.83ms    113MiB   96.2%   174KiB
     relax          686    1.61s   83.8%  2.35ms   97.8MiB   83.1%   146KiB
     dominance      667   4.19ms    0.2%  6.28μs   2.42MiB    2.1%  3.71KiB
     incumbent      664   1.55ms    0.1%  2.33μs    361KiB    0.3%     557B
   next node        667   25.3ms    1.3%  37.9μs   4.30MiB    3.6%  6.60KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.65 
total_nodes = 495 
pruned_nodes = 227 
GAP = 0.0 
relaxation_time = 0.62 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.196 
nb_nodes_EPB = 0 
nb_nodes_VB = 494 
root_relax = true 
TO = false 

Querying...
length Y_N = 14
length X_E = 14
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         24.0s /  12.2%           2.51GiB /   7.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              4    2.91s  100.0%   728ms    197MiB  100.0%  49.2MiB
   iteration      1.09k    2.87s   98.7%  2.64ms    192MiB   97.7%   181KiB
     relax        1.13k    2.59s   89.1%  2.30ms    174MiB   88.3%   157KiB
     dominance    1.09k   6.47ms    0.2%  5.95μs   3.80MiB    1.9%  3.57KiB
     incumbent    1.08k   2.71ms    0.1%  2.50μs    653KiB    0.3%     617B
   next node      1.09k   25.5ms    0.9%  23.4μs   4.31MiB    2.2%  4.06KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.99 
total_nodes = 445 
pruned_nodes = 196 
GAP = 0.0 
relaxation_time = 0.93 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.14 
nb_nodes_EPB = 0 
nb_nodes_VB = 444 
root_relax = true 
TO = false 

Querying...
length Y_N = 12
length X_E = 12
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         48.9s /  56.2%           3.69GiB /  36.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              5    27.5s  100.0%   5.50s   1.36GiB  100.0%   279MiB
   iteration      4.13k    27.4s   99.8%  6.65ms   1.36GiB   99.7%   345KiB
     relax        4.39k    26.8s   97.4%  6.10ms   1.29GiB   94.5%   307KiB
     dominance    4.13k    304ms    1.1%  73.7μs   39.7MiB    2.9%  9.86KiB
     incumbent    4.12k   49.8ms    0.2%  12.1μs   6.90MiB    0.5%  1.71KiB
   next node      4.13k   27.5ms    0.1%  6.65μs   4.40MiB    0.3%  1.09KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 24.58 
total_nodes = 3261 
pruned_nodes = 1565 
GAP = 0.0 
relaxation_time = 23.69 
test_dominance_time = 0.13 
update_incumbent_time = 0.18 
tree_size = 11.343 
nb_nodes_EPB = 0 
nb_nodes_VB = 3260 
root_relax = true 
TO = false 

Querying...
length Y_N = 49
length X_E = 49
displayGraphics
method : bc_rootRelaxEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         49.2s /  56.0%           3.70GiB /  36.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              6    27.6s  100.0%   4.60s   1.37GiB  100.0%   233MiB
   iteration      4.21k    27.5s   99.8%  6.54ms   1.36GiB   99.7%   339KiB
     relax        4.49k    26.9s   97.4%  5.99ms   1.29GiB   94.5%   302KiB
     dominance    4.21k    305ms    1.1%  72.3μs   39.8MiB    2.8%  9.68KiB
     incumbent    4.21k   50.0ms    0.2%  11.9μs   6.92MiB    0.5%  1.68KiB
   next node      4.21k   27.5ms    0.1%  6.53μs   4.41MiB    0.3%  1.07KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.11 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.11 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         49.6s /  55.9%           3.71GiB /  37.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              7    27.7s  100.0%   3.96s   1.37GiB  100.0%   201MiB
   iteration      4.30k    27.7s   99.8%  6.43ms   1.37GiB   99.7%   333KiB
     relax        4.58k    27.0s   97.4%  5.89ms   1.30GiB   94.5%   297KiB
     dominance    4.30k    305ms    1.1%  70.9μs   40.0MiB    2.8%  9.51KiB
     incumbent    4.29k   50.1ms    0.2%  11.7μs   6.95MiB    0.5%  1.66KiB
   next node      4.30k   27.6ms    0.1%  6.41μs   4.41MiB    0.3%  1.05KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.13 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.12 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         50.9s /  56.7%           3.83GiB /  39.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              8    28.9s  100.0%   3.61s   1.49GiB  100.0%   191MiB
   iteration      4.81k    28.8s   99.8%  6.00ms   1.49GiB   99.7%   325KiB
     relax        5.43k    28.1s   97.5%  5.18ms   1.41GiB   94.6%   273KiB
     dominance    4.81k    311ms    1.1%  64.6μs   42.2MiB    2.8%  8.99KiB
     incumbent    4.80k   51.0ms    0.2%  10.6μs   7.08MiB    0.5%  1.51KiB
   next node      4.81k   27.9ms    0.1%  5.82μs   4.42MiB    0.3%     965B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.17 
total_nodes = 850 
pruned_nodes = 400 
GAP = 0.0 
relaxation_time = 0.68 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.493 
nb_nodes_EPB = 19 
nb_nodes_VB = 830 
root_relax = true 
TO = false 

Querying...
length Y_N = 14
length X_E = 14
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         52.2s /  57.5%           3.94GiB /  40.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              9    30.0s  100.0%   3.33s   1.60GiB  100.0%   182MiB
   iteration      5.25k    30.0s   99.8%  5.71ms   1.59GiB   99.7%   318KiB
     relax        6.04k    29.3s   97.5%  4.85ms   1.51GiB   94.7%   263KiB
     dominance    5.25k    315ms    1.0%  60.1μs   43.8MiB    2.7%  8.54KiB
     incumbent    5.24k   52.4ms    0.2%  10.0μs   7.29MiB    0.4%  1.43KiB
   next node      5.25k   28.4ms    0.1%  5.41μs   4.44MiB    0.3%     887B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 1.15 
total_nodes = 609 
pruned_nodes = 275 
GAP = 0.0 
relaxation_time = 1.03 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.308 
nb_nodes_EPB = 14 
nb_nodes_VB = 594 
root_relax = true 
TO = false 

Querying...
length Y_N = 12
length X_E = 12
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         71.3s /  68.2%           5.22GiB /  54.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             10    48.6s  100.0%   4.86s   2.87GiB  100.0%   294MiB
   iteration      8.07k    48.6s   99.8%  6.01ms   2.86GiB   99.8%   372KiB
     relax        11.5k    47.3s   97.3%  4.12ms   2.72GiB   95.0%   248KiB
     dominance    8.07k    765ms    1.6%  94.7μs   82.6MiB    2.8%  10.5KiB
     incumbent    8.06k   61.9ms    0.1%  7.68μs   8.13MiB    0.3%  1.03KiB
   next node      8.07k   32.6ms    0.1%  4.04μs   4.52MiB    0.2%     587B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 18.65 
total_nodes = 5460 
pruned_nodes = 2731 
GAP = 0.0 
relaxation_time = 15.88 
test_dominance_time = 0.01 
update_incumbent_time = 0.05 
tree_size = 10.34 
nb_nodes_EPB = 371 
nb_nodes_VB = 5088 
root_relax = true 
TO = false 

Querying...
length Y_N = 49
length X_E = 49
displayGraphics
method : bc_rootRelaxCP
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         71.6s /  68.1%           5.23GiB /  54.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             11    48.7s  100.0%   4.43s   2.87GiB  100.0%   267MiB
   iteration      8.16k    48.7s   99.8%  5.96ms   2.87GiB   99.8%   368KiB
     relax        11.6k    47.4s   97.3%  4.09ms   2.73GiB   95.0%   247KiB
     dominance    8.16k    765ms    1.6%  93.8μs   82.7MiB    2.8%  10.4KiB
     incumbent    8.15k   62.1ms    0.1%  7.61μs   8.15MiB    0.3%  1.02KiB
   next node      8.16k   32.7ms    0.1%  4.00μs   4.53MiB    0.2%     581B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 87 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.09 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         72.2s /  67.7%           5.24GiB /  55.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             12    48.8s  100.0%   4.07s   2.88GiB  100.0%   246MiB
   iteration      8.25k    48.8s   99.8%  5.91ms   2.87GiB   99.8%   365KiB
     relax        11.7k    47.5s   97.3%  4.06ms   2.73GiB   95.0%   245KiB
     dominance    8.25k    766ms    1.6%  92.8μs   82.8MiB    2.8%  10.3KiB
     incumbent    8.24k   62.2ms    0.1%  7.55μs   8.17MiB    0.3%  1.02KiB
   next node      8.25k   32.7ms    0.1%  3.97μs   4.53MiB    0.2%     576B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 87 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.09 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         74.0s /  67.1%           5.41GiB /  54.6%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             13    49.7s  100.0%   3.82s   2.96GiB  100.0%   233MiB
   iteration      8.74k    49.6s   99.8%  5.67ms   2.95GiB   99.8%   354KiB
     relax        12.2k    48.3s   97.3%  3.97ms   2.81GiB   95.0%   242KiB
     dominance    8.74k    770ms    1.5%  88.1μs   85.0MiB    2.8%  10.0KiB
     incumbent    8.73k   63.5ms    0.1%  7.27μs   8.48MiB    0.3%  0.99KiB
   next node      8.74k   32.9ms    0.1%  3.76μs   4.54MiB    0.2%     545B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 2
 # informations of B&B algorithm : 
total_times_used = 0.86 
total_nodes = 495 
pruned_nodes = 227 
GAP = 0.0 
relaxation_time = 0.74 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.267 
nb_nodes_EPB = 0 
nb_nodes_VB = 494 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 493 
cuts_applied = 2 
sp_cuts = 2 
mp_cuts = 0 
cuts_total = 2 
times_calling_dicho = 0.74 
times_calling_separators = 0.0 
times_oper_cutPool = 0.07 
times_total_for_cuts = 0.83 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 14
length X_E = 14
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         75.3s /  67.5%           5.49GiB /  55.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             14    50.8s  100.0%   3.63s   3.04GiB  100.0%   222MiB
   iteration      9.16k    50.7s   99.8%  5.54ms   3.03GiB   99.8%   347KiB
     relax        12.6k    49.5s   97.4%  3.92ms   2.89GiB   95.1%   240KiB
     dominance    9.16k    773ms    1.5%  84.3μs   86.4MiB    2.8%  9.66KiB
     incumbent    9.15k   64.9ms    0.1%  7.10μs   8.77MiB    0.3%  0.98KiB
   next node      9.16k   33.1ms    0.1%  3.61μs   4.56MiB    0.1%     521B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 5
 # informations of B&B algorithm : 
total_times_used = 1.15 
total_nodes = 445 
pruned_nodes = 196 
GAP = 0.0 
relaxation_time = 1.1 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.217 
nb_nodes_EPB = 0 
nb_nodes_VB = 444 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 421 
cuts_applied = 5 
sp_cuts = 5 
mp_cuts = 0 
cuts_total = 5 
times_calling_dicho = 1.1 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 1.11 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 12
length X_E = 12
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         99.0s /  75.0%           6.68GiB /  63.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             15    74.2s  100.0%   4.95s   4.20GiB  100.0%   287MiB
   iteration      12.0k    74.2s   99.9%  6.17ms   4.20GiB   99.9%   366KiB
     relax        15.7k    72.5s   97.7%  4.62ms   4.00GiB   95.2%   267KiB
     dominance    12.0k    1.06s    1.4%  87.9μs    121MiB    2.8%  10.3KiB
     incumbent    12.0k    109ms    0.1%  9.11μs   14.7MiB    0.3%  1.25KiB
   next node      12.0k   34.6ms    0.0%  2.88μs   4.64MiB    0.1%     405B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 579
 # informations of B&B algorithm : 
total_times_used = 23.44 
total_nodes = 3077 
pruned_nodes = 1473 
GAP = 0.0 
relaxation_time = 22.56 
test_dominance_time = 0.13 
update_incumbent_time = 0.17 
tree_size = 10.788 
nb_nodes_EPB = 0 
nb_nodes_VB = 3076 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 2856 
cuts_applied = 579 
sp_cuts = 578 
mp_cuts = 1 
cuts_total = 579 
times_calling_dicho = 22.56 
times_calling_separators = 0.05 
times_oper_cutPool = 0.03 
times_total_for_cuts = 22.77 
times_add_retrieve_cuts = 0.05 



Querying...
length Y_N = 49
length X_E = 49
displayGraphics
method : bc_rootRelaxCPEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         99.2s /  74.9%           6.68GiB /  63.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             16    74.3s  100.0%   4.65s   4.21GiB  100.0%   269MiB
   iteration      12.1k    74.2s   99.9%  6.13ms   4.20GiB   99.9%   364KiB
     relax        15.8k    72.6s   97.7%  4.60ms   4.01GiB   95.2%   266KiB
     dominance    12.1k    1.06s    1.4%  87.3μs    121MiB    2.8%  10.2KiB
     incumbent    12.1k    109ms    0.1%  9.05μs   14.7MiB    0.3%  1.25KiB
   next node      12.1k   34.6ms    0.0%  2.86μs   4.65MiB    0.1%     402B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.08 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.08 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 87 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.08 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.07 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
────────────────────────
    Tot / % measured:         99.5s /  74.8%           6.69GiB /  63.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             17    74.4s  100.0%   4.38s   4.21GiB  100.0%   254MiB
   iteration      12.2k    74.3s   99.9%  6.10ms   4.21GiB   99.9%   362KiB
     relax        15.9k    72.7s   97.7%  4.57ms   4.01GiB   95.2%   265KiB
     dominance    12.2k    1.06s    1.4%  86.6μs    121MiB    2.8%  10.1KiB
     incumbent    12.2k    110ms    0.1%  9.00μs   14.7MiB    0.3%  1.24KiB
   next node      12.2k   34.6ms    0.0%  2.84μs   4.65MiB    0.1%     400B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 97 
pruned_nodes = 38 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.153 
nb_nodes_EPB = 0 
nb_nodes_VB = 96 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 87 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.09 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:          100s /  74.9%           6.79GiB /  63.5%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             18    75.2s  100.0%   4.18s   4.31GiB  100.0%   245MiB
   iteration      12.7k    75.1s   99.9%  5.92ms   4.30GiB   99.9%   355KiB
     relax        16.7k    73.5s   97.7%  4.39ms   4.10GiB   95.2%   257KiB
     dominance    12.7k    1.06s    1.4%  83.8μs    123MiB    2.8%  9.92KiB
     incumbent    12.7k    111ms    0.1%  8.73μs   14.9MiB    0.3%  1.20KiB
   next node      12.7k   35.0ms    0.0%  2.75μs   4.66MiB    0.1%     385B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 0.83 
total_nodes = 850 
pruned_nodes = 400 
GAP = 0.0 
relaxation_time = 0.65 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 1.564 
nb_nodes_EPB = 19 
nb_nodes_VB = 830 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 505 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 0.65 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.57 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 14
length X_E = 14
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:          102s /  75.0%           6.89GiB /  64.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             19    76.2s  100.0%   4.01s   4.41GiB  100.0%   238MiB
   iteration      13.1k    76.1s   99.9%  5.79ms   4.41GiB   99.9%   352KiB
     relax        17.4k    74.5s   97.7%  4.29ms   4.20GiB   95.2%   254KiB
     dominance    13.1k    1.07s    1.4%  81.2μs    125MiB    2.8%  9.71KiB
     incumbent    13.1k    112ms    0.1%  8.53μs   15.1MiB    0.3%  1.18KiB
   next node      13.1k   35.2ms    0.0%  2.68μs   4.68MiB    0.1%     373B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 3
 # informations of B&B algorithm : 
total_times_used = 0.98 
total_nodes = 609 
pruned_nodes = 275 
GAP = 0.0 
relaxation_time = 0.87 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 1.387 
nb_nodes_EPB = 14 
nb_nodes_VB = 594 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 439 
cuts_applied = 3 
sp_cuts = 3 
mp_cuts = 0 
cuts_total = 3 
times_calling_dicho = 0.87 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.83 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 12
length X_E = 12
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:          117s /  78.1%           8.22GiB /  69.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             20    91.4s  100.0%   4.57s   5.73GiB  100.0%   293MiB
   iteration      16.0k    91.3s   99.9%  5.72ms   5.72GiB   99.9%   376KiB
     relax        22.8k    89.2s   97.6%  3.90ms   5.46GiB   95.3%   251KiB
     dominance    16.0k    1.46s    1.6%  91.4μs    164MiB    2.8%  10.5KiB
     incumbent    15.9k    121ms    0.1%  7.56μs   15.9MiB    0.3%  1.02KiB
   next node      16.0k   37.6ms    0.0%  2.35μs   4.76MiB    0.1%     313B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 216
 # informations of B&B algorithm : 
total_times_used = 15.21 
total_nodes = 5489 
pruned_nodes = 2749 
GAP = 0.0 
relaxation_time = 13.05 
test_dominance_time = 0.01 
update_incumbent_time = 0.04 
tree_size = 10.488 
nb_nodes_EPB = 382 
nb_nodes_VB = 5106 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 2836 
cuts_applied = 216 
sp_cuts = 215 
mp_cuts = 1 
cuts_total = 216 
times_calling_dicho = 13.05 
times_calling_separators = 0.03 
times_oper_cutPool = 0.01 
times_total_for_cuts = 10.73 
times_add_retrieve_cuts = 0.02 



Querying...
length Y_N = 49
length X_E = 49
displayGraphics
./MOBKP/set3/W7BI-tube2-1800.DAT

Project MOMH 2021" --------------------------------

method : bc_rootRelax
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         20.3s /   5.5%           2.26GiB /   2.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              1    1.12s  100.0%   1.12s   51.5MiB  100.0%  51.5MiB
   iteration         83    1.08s   96.7%  13.0ms   47.0MiB   91.3%   580KiB
     relax          106    806ms   72.1%  7.60ms   36.0MiB   69.8%   347KiB
     dominance       83    270μs    0.0%  3.25μs    162KiB    0.3%  1.96KiB
     incumbent       82    186μs    0.0%  2.27μs   39.1KiB    0.1%     488B
   next node         83   25.3ms    2.3%   305μs   4.28MiB    8.3%  52.8KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 4.54 
total_nodes = 107 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 4.11 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.161 
nb_nodes_EPB = 0 
nb_nodes_VB = 106 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         21.9s /   5.5%           2.37GiB /   2.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              2    1.21s  100.0%   603ms   57.6MiB  100.0%  28.8MiB
   iteration        166    1.17s   97.0%  7.04ms   53.1MiB   92.2%   328KiB
     relax          212    892ms   74.0%  4.21ms   41.6MiB   72.2%   201KiB
     dominance      166    498μs    0.0%  3.00μs    325KiB    0.6%  1.96KiB
     incumbent      164    359μs    0.0%  2.19μs   78.1KiB    0.1%     488B
   next node        166   25.3ms    2.1%   153μs   4.28MiB    7.4%  26.4KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.09 
total_nodes = 107 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.161 
nb_nodes_EPB = 0 
nb_nodes_VB = 106 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         22.5s /   7.2%           2.40GiB /   3.7%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              3    1.61s  100.0%   537ms   91.9MiB  100.0%  30.6MiB
   iteration        454    1.57s   97.7%  3.46ms   87.4MiB   95.1%   197KiB
     relax          516    1.29s   80.3%  2.51ms   74.3MiB   80.9%   148KiB
     incumbent      451   1.13ms    0.1%  2.50μs    253KiB    0.3%     576B
     dominance      454   1.10ms    0.1%  2.42μs    734KiB    0.8%  1.62KiB
   next node        454   25.4ms    1.6%  56.0μs   4.29MiB    4.7%  9.68KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.41 
total_nodes = 305 
pruned_nodes = 134 
GAP = 0.0 
relaxation_time = 0.39 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.702 
nb_nodes_EPB = 0 
nb_nodes_VB = 304 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         26.2s /  19.7%           2.72GiB /  14.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              4    5.16s  100.0%   1.29s    400MiB  100.0%   100MiB
   iteration      1.95k    5.12s   99.2%  2.63ms    396MiB   98.8%   208KiB
     relax        2.05k    4.76s   92.1%  2.33ms    363MiB   90.7%   182KiB
     dominance    1.95k   47.7ms    0.9%  24.5μs   13.1MiB    3.3%  6.90KiB
     incumbent    1.94k   11.8ms    0.2%  6.09μs   2.28MiB    0.6%  1.20KiB
   next node      1.95k   26.0ms    0.5%  13.3μs   4.34MiB    1.1%  2.28KiB
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 3.57 
total_nodes = 1531 
pruned_nodes = 727 
GAP = 0.0 
relaxation_time = 3.37 
test_dominance_time = 0.02 
update_incumbent_time = 0.04 
tree_size = 4.174 
nb_nodes_EPB = 0 
nb_nodes_VB = 1530 
root_relax = true 
TO = false 

Querying...
length Y_N = 28
length X_E = 28
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         38.9s /  45.2%           3.71GiB /  37.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              5    17.6s  100.0%   3.51s   1.37GiB  100.0%   281MiB
   iteration      5.09k    17.5s   99.7%  3.44ms   1.37GiB   99.7%   282KiB
     relax        5.30k    16.8s   95.6%  3.17ms   1.28GiB   93.3%   253KiB
     dominance    5.09k    333ms    1.9%  65.4μs   53.3MiB    3.8%  10.7KiB
     incumbent    5.08k   53.2ms    0.3%  10.5μs   8.23MiB    0.6%  1.66KiB
   next node      5.09k   27.3ms    0.2%  5.36μs   4.43MiB    0.3%     913B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 12.42 
total_nodes = 3259 
pruned_nodes = 1559 
GAP = 0.0 
relaxation_time = 11.73 
test_dominance_time = 0.13 
update_incumbent_time = 0.14 
tree_size = 10.11 
nb_nodes_EPB = 0 
nb_nodes_VB = 3258 
root_relax = true 
TO = false 

Querying...
length Y_N = 43
length X_E = 43
displayGraphics
method : bc_rootRelaxEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         39.3s /  45.5%           3.75GiB /  37.6%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              6    17.9s  100.0%   2.98s   1.41GiB  100.0%   241MiB
   iteration      5.19k    17.8s   99.7%  3.44ms   1.41GiB   99.7%   284KiB
     relax        5.46k    17.1s   95.7%  3.14ms   1.32GiB   93.4%   253KiB
     dominance    5.19k    333ms    1.9%  64.2μs   53.5MiB    3.7%  10.6KiB
     incumbent    5.18k   53.3ms    0.3%  10.3μs   8.25MiB    0.6%  1.63KiB
   next node      5.19k   27.3ms    0.2%  5.27μs   4.44MiB    0.3%     897B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.32 
total_nodes = 152 
pruned_nodes = 67 
GAP = 0.0 
relaxation_time = 0.1 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.219 
nb_nodes_EPB = 9 
nb_nodes_VB = 142 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         39.6s /  45.5%           3.76GiB /  37.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              7    18.0s  100.0%   2.57s   1.42GiB  100.0%   208MiB
   iteration      5.28k    17.9s   99.7%  3.39ms   1.42GiB   99.7%   281KiB
     relax        5.61k    17.2s   95.7%  3.07ms   1.33GiB   93.4%   248KiB
     dominance    5.28k    334ms    1.9%  63.1μs   53.7MiB    3.7%  10.4KiB
     incumbent    5.28k   53.4ms    0.3%  10.1μs   8.28MiB    0.6%  1.61KiB
   next node      5.28k   27.4ms    0.2%  5.18μs   4.44MiB    0.3%     881B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.11 
total_nodes = 152 
pruned_nodes = 67 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.219 
nb_nodes_EPB = 9 
nb_nodes_VB = 142 
root_relax = true 
TO = false 

Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         40.1s /  45.8%           3.80GiB /  38.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              8    18.4s  100.0%   2.30s   1.46GiB  100.0%   187MiB
   iteration      5.56k    18.3s   99.7%  3.29ms   1.45GiB   99.7%   274KiB
     relax        5.95k    17.6s   95.8%  2.96ms   1.36GiB   93.5%   240KiB
     dominance    5.56k    334ms    1.8%  60.1μs   54.1MiB    3.6%  10.0KiB
     incumbent    5.56k   54.1ms    0.3%  9.73μs   8.42MiB    0.6%  1.55KiB
   next node      5.56k   27.5ms    0.1%  4.94μs   4.45MiB    0.3%     838B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.39 
total_nodes = 342 
pruned_nodes = 154 
GAP = 0.0 
relaxation_time = 0.36 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.723 
nb_nodes_EPB = 3 
nb_nodes_VB = 338 
root_relax = true 
TO = false 

Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         42.7s /  48.6%           4.23GiB /  44.4%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop              9    20.7s  100.0%   2.30s   1.88GiB  100.0%   214MiB
   iteration      6.90k    20.7s   99.8%  3.00ms   1.88GiB   99.7%   285KiB
     relax        8.42k    19.9s   95.9%  2.36ms   1.77GiB   93.9%   220KiB
     dominance    6.90k    382ms    1.8%  55.3μs   65.2MiB    3.4%  9.68KiB
     incumbent    6.89k   56.5ms    0.3%  8.20μs   8.81MiB    0.5%  1.31KiB
   next node      6.90k   28.1ms    0.1%  4.08μs   4.49MiB    0.2%     682B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 2.37 
total_nodes = 2470 
pruned_nodes = 1196 
GAP = 0.0 
relaxation_time = 1.86 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 4.338 
nb_nodes_EPB = 63 
nb_nodes_VB = 2406 
root_relax = true 
TO = false 

Querying...
length Y_N = 28
length X_E = 28
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         52.9s /  58.0%           5.66GiB /  58.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             10    30.7s  100.0%   3.07s   3.29GiB  100.0%   337MiB
   iteration      10.1k    30.7s   99.8%  3.04ms   3.28GiB   99.8%   341KiB
     relax        14.6k    29.5s   95.9%  2.02ms   3.11GiB   94.6%   224KiB
     dominance    10.1k    750ms    2.4%  74.3μs    107MiB    3.2%  10.9KiB
     incumbent    10.1k   62.7ms    0.2%  6.22μs   9.57MiB    0.3%     995B
   next node      10.1k   29.9ms    0.1%  2.97μs   4.59MiB    0.1%     476B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 10.04 
total_nodes = 6169 
pruned_nodes = 3055 
GAP = 0.0 
relaxation_time = 8.08 
test_dominance_time = 0.01 
update_incumbent_time = 0.03 
tree_size = 10.892 
nb_nodes_EPB = 204 
nb_nodes_VB = 5964 
root_relax = true 
TO = false 

Querying...
length Y_N = 43
length X_E = 43
displayGraphics
method : bc_rootRelaxCP
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         53.2s /  57.9%           5.67GiB /  58.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             11    30.8s  100.0%   2.80s   3.30GiB  100.0%   307MiB
   iteration      10.2k    30.7s   99.8%  3.02ms   3.29GiB   99.8%   339KiB
     relax        14.7k    29.5s   95.9%  2.01ms   3.12GiB   94.6%   222KiB
     dominance    10.2k    750ms    2.4%  73.7μs    108MiB    3.2%  10.8KiB
     incumbent    10.2k   62.8ms    0.2%  6.18μs   9.60MiB    0.3%     991B
   next node      10.2k   30.0ms    0.1%  2.95μs   4.59MiB    0.1%     473B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.09 
total_nodes = 107 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.161 
nb_nodes_EPB = 0 
nb_nodes_VB = 106 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 83 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.08 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         53.4s /  57.8%           5.67GiB /  58.2%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             12    30.9s  100.0%   2.57s   3.30GiB  100.0%   282MiB
   iteration      10.3k    30.8s   99.8%  3.01ms   3.30GiB   99.8%   337KiB
     relax        14.8k    29.6s   95.9%  2.00ms   3.12GiB   94.6%   221KiB
     dominance    10.3k    750ms    2.4%  73.1μs    108MiB    3.2%  10.8KiB
     incumbent    10.2k   63.0ms    0.2%  6.15μs   9.64MiB    0.3%     987B
   next node      10.3k   30.0ms    0.1%  2.92μs   4.59MiB    0.1%     469B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.09 
total_nodes = 107 
pruned_nodes = 44 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.161 
nb_nodes_EPB = 0 
nb_nodes_VB = 106 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 83 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.08 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         54.8s /  57.0%           5.82GiB /  57.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             13    31.3s  100.0%   2.40s   3.33GiB  100.0%   263MiB
   iteration      10.5k    31.2s   99.8%  2.96ms   3.33GiB   99.8%   331KiB
     relax        15.1k    30.0s   95.9%  1.99ms   3.15GiB   94.6%   219KiB
     dominance    10.5k    751ms    2.4%  71.2μs    108MiB    3.2%  10.5KiB
     incumbent    10.5k   63.7ms    0.2%  6.05μs   9.81MiB    0.3%     976B
   next node      10.5k   30.1ms    0.1%  2.85μs   4.60MiB    0.1%     457B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 0.6 
total_nodes = 301 
pruned_nodes = 132 
GAP = 0.0 
relaxation_time = 0.49 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.762 
nb_nodes_EPB = 0 
nb_nodes_VB = 300 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 284 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 0.49 
times_calling_separators = 0.0 
times_oper_cutPool = 0.07 
times_total_for_cuts = 0.56 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         58.6s /  59.4%           6.13GiB /  59.3%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             14    34.8s  100.0%   2.49s   3.64GiB  100.0%   266MiB
   iteration      12.0k    34.7s   99.8%  2.89ms   3.63GiB   99.9%   316KiB
     relax        16.6k    33.4s   96.0%  2.01ms   3.44GiB   94.5%   217KiB
     dominance    12.0k    819ms    2.4%  68.0μs    121MiB    3.2%  10.3KiB
     incumbent    12.0k   74.6ms    0.2%  6.20μs   11.8MiB    0.3%  1.01KiB
   next node      12.0k   30.6ms    0.1%  2.55μs   4.64MiB    0.1%     405B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 5
 # informations of B&B algorithm : 
total_times_used = 3.56 
total_nodes = 1531 
pruned_nodes = 727 
GAP = 0.0 
relaxation_time = 3.33 
test_dominance_time = 0.04 
update_incumbent_time = 0.04 
tree_size = 4.257 
nb_nodes_EPB = 0 
nb_nodes_VB = 1530 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 1494 
cuts_applied = 5 
sp_cuts = 5 
mp_cuts = 0 
cuts_total = 5 
times_calling_dicho = 3.33 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 3.36 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 28
length X_E = 28
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         71.2s /  66.3%           7.14GiB /  64.8%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             15    47.2s  100.0%   3.15s   4.63GiB  100.0%   316MiB
   iteration      15.2k    47.2s   99.9%  3.11ms   4.63GiB   99.9%   320KiB
     relax        19.9k    45.5s   96.3%  2.29ms   4.38GiB   94.5%   231KiB
     dominance    15.2k    1.11s    2.3%  73.0μs    161MiB    3.4%  10.8KiB
     incumbent    15.2k    116ms    0.2%  7.66μs   17.8MiB    0.4%  1.20KiB
   next node      15.2k   31.9ms    0.1%  2.10μs   4.74MiB    0.1%     327B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 69
 # informations of B&B algorithm : 
total_times_used = 12.43 
total_nodes = 3259 
pruned_nodes = 1559 
GAP = 0.0 
relaxation_time = 11.67 
test_dominance_time = 0.13 
update_incumbent_time = 0.16 
tree_size = 10.216 
nb_nodes_EPB = 0 
nb_nodes_VB = 3258 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 3142 
cuts_applied = 69 
sp_cuts = 69 
mp_cuts = 0 
cuts_total = 69 
times_calling_dicho = 11.67 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 11.8 
times_add_retrieve_cuts = 0.02 



Querying...
length Y_N = 43
length X_E = 43
displayGraphics
method : bc_rootRelaxCPEPB
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         71.5s /  66.2%           7.15GiB /  64.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             16    47.3s  100.0%   2.96s   4.64GiB  100.0%   297MiB
   iteration      15.3k    47.3s   99.9%  3.09ms   4.64GiB   99.9%   318KiB
     relax        20.0k    45.6s   96.3%  2.27ms   4.39GiB   94.5%   230KiB
     dominance    15.3k    1.11s    2.3%  72.6μs    161MiB    3.4%  10.8KiB
     incumbent    15.3k    116ms    0.2%  7.62μs   17.9MiB    0.4%  1.20KiB
   next node      15.3k   32.0ms    0.1%  2.09μs   4.74MiB    0.1%     326B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.1 
total_nodes = 152 
pruned_nodes = 67 
GAP = 0.0 
relaxation_time = 0.09 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.219 
nb_nodes_EPB = 9 
nb_nodes_VB = 142 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 97 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.09 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.08 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=10
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Node :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isRoot :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.hasNonExploredChild :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.delete! :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.prune! :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.PrunedType}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.getPartialAssign :: Tuple{Main.vOptGeneric.Node}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarObjBounds :: Tuple{Main.vOptGeneric.Node, Main.vOptGeneric.BO01Problem, Any, Any}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.removeVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setVarBound :: Tuple{Main.vOptGeneric.BO01Problem, Int64, Int64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.setObjBound :: Tuple{Main.vOptGeneric.BO01Problem, Vector{Float64}, Float64}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.CutPool, Main.vOptGeneric.Cut}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.CutsInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.StatInfo :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BBparam :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.BO01Problem :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.Solution :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.isBinary :: Tuple{Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.addEquivX :: Tuple{Main.vOptGeneric.Solution, Vector{Float64}}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.show :: Tuple{IO, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.dominate :: Tuple{Main.vOptGeneric.Solution, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.NaturalOrderVector :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Base.push! :: Tuple{Main.vOptGeneric.NaturalOrderVector, Main.vOptGeneric.Solution}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.RelaxedBoundSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
┌ Warning: Replacing docs for `Main.vOptGeneric.IncumbentSet :: Union{}` in module `Main.vOptGeneric`
└ @ Base.Docs docs/Docs.jl:240
────────────────────────
    Tot / % measured:         71.7s /  66.1%           7.17GiB /  64.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             17    47.4s  100.0%   2.79s   4.65GiB  100.0%   280MiB
   iteration      15.4k    47.4s   99.9%  3.08ms   4.65GiB   99.9%   317KiB
     relax        20.2k    45.6s   96.3%  2.26ms   4.40GiB   94.5%   228KiB
     dominance    15.4k    1.11s    2.3%  72.1μs    161MiB    3.4%  10.7KiB
     incumbent    15.4k    116ms    0.2%  7.58μs   17.9MiB    0.4%  1.19KiB
   next node      15.4k   32.0ms    0.1%  2.08μs   4.75MiB    0.1%     324B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 0
 # informations of B&B algorithm : 
total_times_used = 0.11 
total_nodes = 152 
pruned_nodes = 67 
GAP = 0.0 
relaxation_time = 0.1 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.219 
nb_nodes_EPB = 9 
nb_nodes_VB = 142 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 97 
cuts_applied = 0 
sp_cuts = 0 
mp_cuts = 0 
cuts_total = 0 
times_calling_dicho = 0.1 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.09 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 7
length X_E = 7
displayGraphics
n=20
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         72.2s /  66.2%           7.20GiB /  65.1%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             18    47.8s  100.0%   2.65s   4.69GiB  100.0%   267MiB
   iteration      15.6k    47.7s   99.9%  3.05ms   4.68GiB   99.9%   314KiB
     relax        20.5k    46.0s   96.3%  2.24ms   4.43GiB   94.5%   226KiB
     dominance    15.6k    1.11s    2.3%  70.9μs    162MiB    3.4%  10.6KiB
     incumbent    15.6k    117ms    0.2%  7.49μs   18.0MiB    0.4%  1.18KiB
   next node      15.6k   32.1ms    0.1%  2.05μs   4.75MiB    0.1%     319B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 0.35 
total_nodes = 338 
pruned_nodes = 152 
GAP = 0.0 
relaxation_time = 0.33 
test_dominance_time = 0.0 
update_incumbent_time = 0.0 
tree_size = 0.783 
nb_nodes_EPB = 3 
nb_nodes_VB = 334 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 276 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 0.33 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 0.32 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 5
length X_E = 5
displayGraphics
n=30
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         74.7s /  67.0%           7.64GiB /  66.9%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             19    50.1s  100.0%   2.64s   5.11GiB  100.0%   275MiB
   iteration      17.0k    50.0s   99.9%  2.95ms   5.11GiB   99.9%   315KiB
     relax        23.0k    48.3s   96.3%  2.10ms   4.83GiB   94.5%   220KiB
     dominance    17.0k    1.16s    2.3%  68.2μs    173MiB    3.3%  10.4KiB
     incumbent    17.0k    120ms    0.2%  7.05μs   18.4MiB    0.4%  1.11KiB
   next node      17.0k   32.8ms    0.1%  1.93μs   4.80MiB    0.1%     296B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 1
 # informations of B&B algorithm : 
total_times_used = 2.36 
total_nodes = 2470 
pruned_nodes = 1196 
GAP = 0.0 
relaxation_time = 1.84 
test_dominance_time = 0.0 
update_incumbent_time = 0.01 
tree_size = 4.423 
nb_nodes_EPB = 63 
nb_nodes_VB = 2406 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 1334 
cuts_applied = 1 
sp_cuts = 1 
mp_cuts = 0 
cuts_total = 1 
times_calling_dicho = 1.84 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 1.54 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 28
length X_E = 28
displayGraphics
n=40
Building...
Solving...
 ──────────────────────────────────────────────────────────────────────────
                                  Time                    Allocations      
                         ───────────────────────   ────────────────────────
    Tot / % measured:         84.9s /  70.7%           9.07GiB /  72.0%    

 Section         ncalls     time    %tot     avg     alloc    %tot      avg
 ──────────────────────────────────────────────────────────────────────────
 BB loop             20    60.0s  100.0%   3.00s   6.53GiB  100.0%   334MiB
   iteration      20.2k    59.9s   99.9%  2.97ms   6.52GiB   99.9%   339KiB
     relax        29.2k    57.7s   96.2%  1.98ms   6.18GiB   94.7%   222KiB
     dominance    20.2k    1.53s    2.5%  75.6μs    215MiB    3.2%  10.9KiB
     incumbent    20.2k    126ms    0.2%  6.24μs   19.2MiB    0.3%     997B
   next node      20.2k   34.6ms    0.1%  1.71μs   4.89MiB    0.1%     254B
 ──────────────────────────────────────────────────────────────────────────
 total cuts : 31
 # informations of B&B algorithm : 
total_times_used = 9.93 
total_nodes = 6166 
pruned_nodes = 3054 
GAP = 0.0 
relaxation_time = 8.04 
test_dominance_time = 0.01 
update_incumbent_time = 0.03 
tree_size = 10.991 
nb_nodes_EPB = 205 
nb_nodes_VB = 5960 
root_relax = true 
TO = false 


 # ----------- info about cuts : 
ite_total = 3193 
cuts_applied = 31 
sp_cuts = 31 
mp_cuts = 0 
cuts_total = 31 
times_calling_dicho = 8.04 
times_calling_separators = 0.0 
times_oper_cutPool = 0.0 
times_total_for_cuts = 6.42 
times_add_retrieve_cuts = 0.0 



Querying...
length Y_N = 43
length X_E = 43
displayGraphics
./MOBKP/set3/Wcollage-tube.DAT
